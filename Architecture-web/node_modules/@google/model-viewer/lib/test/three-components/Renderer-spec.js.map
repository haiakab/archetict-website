{"version":3,"file":"Renderer-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/Renderer-spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {USE_OFFSCREEN_CANVAS} from '../../constants.js';\nimport ModelViewerElementBase, {$canvas, $getModelIsVisible, $loaded, $onResize, $renderer, $scene, $userInputElement} from '../../model-viewer-base.js';\nimport {ModelScene} from '../../three-components/ModelScene.js';\nimport {Renderer} from '../../three-components/Renderer.js';\nimport {waitForEvent} from '../../utilities.js';\nimport {assetPath} from '../helpers.js';\n\nconst expect = chai.expect;\n\nconst ModelViewerElement = class extends ModelViewerElementBase {\n  static get is() {\n    return 'model-viewer-renderer';\n  }\n};\n\ncustomElements.define('model-viewer-renderer', ModelViewerElement);\n\nasync function createScene(): Promise<ModelScene> {\n  const element = new ModelViewerElement();\n  document.body.insertBefore(element, document.body.firstChild);\n  const sourceLoads = waitForEvent(element, 'load');\n  element.src = assetPath('models/Astronaut.glb');\n  element[$getModelIsVisible] = () => {\n    return true;\n  };\n  // manual render loop\n  element[$renderer].threeRenderer.setAnimationLoop(null);\n  await sourceLoads;\n\n  return element[$scene];\n}\n\nsuite('Renderer', () => {\n  let scene: ModelScene;\n  let renderer: Renderer;\n\n  setup(async () => {\n    renderer = Renderer.singleton;\n    // Ensure tests are not rescaling\n    ModelViewerElement.minimumRenderScale = 1;\n    scene = await createScene();\n  });\n\n  teardown(() => {\n    const {element} = scene;\n    if (element.parentNode != null) {\n      element.parentNode.removeChild(element);\n    }\n    renderer.render(performance.now());\n  });\n\n  suite('render', () => {\n    let otherScene: ModelScene;\n\n    setup(async () => {\n      otherScene = await createScene();\n    });\n\n    teardown(() => {\n      const {element} = otherScene;\n      if (element.parentNode != null) {\n        element.parentNode.removeChild(element);\n      }\n      renderer.render(performance.now());\n    });\n\n    test('renders only dirty scenes', () => {\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1, 'scene first render');\n      expect(otherScene.renderCount).to.be.equal(1, 'otherScene first render');\n\n      scene.isDirty = true;\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(2, 'scene second render');\n      expect(otherScene.renderCount).to.be.equal(1, 'otherScene second render');\n    });\n\n    test('does not render scenes that have not been loaded', () => {\n      scene.element[$loaded] = false;\n      scene.isDirty = true;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(0);\n      expect(scene.isDirty).to.be.eq(true);\n\n      scene.element[$loaded] = true;\n\n      renderer.render(performance.now());\n      expect(scene.renderCount).to.be.equal(1);\n      expect(!scene.isDirty).to.be.eq(true);\n    });\n\n    test('uses the proper canvas when unregsitering scenes', () => {\n      renderer.render(performance.now());\n\n      expect(renderer.canvasElement.classList.contains('show'))\n          .to.be.eq(\n              false, 'webgl canvas should not be shown with multiple scenes.');\n      expect(scene.element[$canvas].classList.contains('show'))\n          .to.be.eq(true, 'scene canvas should be shown with multiple scenes.');\n      expect(otherScene.element[$canvas].classList.contains('show'))\n          .to.be.eq(\n              true, 'otherScene canvas should be shown with multiple scenes.');\n\n      renderer.unregisterScene(scene);\n      renderer.render(performance.now());\n\n      if (USE_OFFSCREEN_CANVAS) {\n        expect(renderer.canvasElement.classList.contains('show'))\n            .to.be.eq(false);\n        expect(otherScene.element[$canvas].classList.contains('show'))\n            .to.be.eq(true);\n      } else {\n        expect(renderer.canvasElement.parentElement)\n            .to.be.eq(otherScene.element[$userInputElement]);\n        expect(renderer.canvasElement.classList.contains('show'))\n            .to.be.eq(true, 'webgl canvas should be shown with single scene.');\n        expect(otherScene.element[$canvas].classList.contains('show'))\n            .to.be.eq(\n                false,\n                'otherScene canvas should not be shown when it is the only scene.');\n      }\n    });\n\n    suite('when resizing', () => {\n      let originalDpr: number;\n\n      setup(() => {\n        originalDpr = self.devicePixelRatio;\n      });\n\n      teardown(() => {\n        Object.defineProperty(self, 'devicePixelRatio', {value: originalDpr});\n      });\n\n      test('updates effective DPR', () => {\n        const {element} = scene;\n        const initialDpr = renderer.dpr;\n        const {width, height} = scene.getSize();\n\n        element[$onResize]({width, height});\n\n        Object.defineProperty(\n            self, 'devicePixelRatio', {value: initialDpr + 1});\n\n        renderer.render(performance.now());\n\n        const newDpr = renderer.dpr;\n\n        expect(newDpr).to.be.equal(initialDpr + 1);\n      });\n    });\n  });\n});\n"]}