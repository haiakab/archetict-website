{"version":3,"file":"ARRenderer.js","sourceRoot":"","sources":["../../src/three-components/ARRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '../types/webxr.js';\n\nimport {Event as ThreeEvent, EventDispatcher, Matrix4, PerspectiveCamera, Ray, Vector3, WebGLRenderer} from 'three';\n\nimport {$onResize} from '../model-viewer-base.js';\nimport {assertIsArCandidate} from '../utilities.js';\n\nimport {Damper} from './Damper.js';\nimport {ModelScene} from './ModelScene.js';\nimport {PlacementBox} from './PlacementBox.js';\nimport {Renderer} from './Renderer.js';\n\n// AR shadow is not user-configurable. This is to pave the way for AR lighting\n// estimation, which will be used once available in WebXR.\nconst AR_SHADOW_INTENSITY = 0.3;\nconst ROTATION_RATE = 1.5;\n// Angle down (towards bottom of screen) from camera center ray to use for hit\n// testing against the floor. This makes placement faster and more intuitive\n// assuming the phone is in portrait mode. This seems to be a reasonable\n// assumption for the start of the session and UI will lack landscape mode to\n// encourage upright use.\nconst HIT_ANGLE_DEG = 20;\n// Slow down the dampers for initial placement.\nconst INTRO_DAMPER_RATE = 0.4;\nconst SCALE_SNAP_HIGH = 1.2;\nconst SCALE_SNAP_LOW = 1 / SCALE_SNAP_HIGH;\n\n// For automatic dynamic viewport scaling, don't let the scale drop below this\n// limit.\nconst MIN_VIEWPORT_SCALE = 0.25;\n\nexport type ARStatus =\n    'not-presenting'|'session-started'|'object-placed'|'failed';\n\nexport const ARStatus: {[index: string]: ARStatus} = {\n  NOT_PRESENTING: 'not-presenting',\n  SESSION_STARTED: 'session-started',\n  OBJECT_PLACED: 'object-placed',\n  FAILED: 'failed'\n};\n\nexport interface ARStatusEvent extends ThreeEvent {\n  status: ARStatus,\n}\n\nconst vector3 = new Vector3();\nconst matrix4 = new Matrix4();\nconst hitPosition = new Vector3();\n\nexport class ARRenderer extends EventDispatcher {\n  public threeRenderer: WebGLRenderer;\n  public camera: PerspectiveCamera = new PerspectiveCamera();\n  public currentSession: XRSession|null = null;\n  public placeOnWall = false;\n\n  private placementBox: PlacementBox|null = null;\n  private lastTick: number|null = null;\n  private turntableRotation: number|null = null;\n  private oldShadowIntensity: number|null = null;\n  private oldBackground: any = null;\n  private rafId: number|null = null;\n  private refSpace: XRReferenceSpace|null = null;\n  private viewerRefSpace: XRReferenceSpace|null = null;\n  private frame: XRFrame|null = null;\n  private initialHitSource: XRHitTestSource|null = null;\n  private transientHitTestSource: XRTransientInputHitTestSource|null = null;\n  private inputSource: XRInputSource|null = null;\n  private _presentedScene: ModelScene|null = null;\n  private resolveCleanup: ((...args: any[]) => void)|null = null;\n  private exitWebXRButtonContainer: HTMLElement|null = null;\n  private initialModelToWorld: Matrix4|null = null;\n\n  private initialized = false;\n  private oldTarget = new Vector3();\n  private placementComplete = false;\n  private isTranslating = false;\n  private isRotating = false;\n  private isScaling = false;\n  private lastDragPosition = new Vector3();\n  private lastScalar = 0;\n  private goalPosition = new Vector3();\n  private goalYaw = 0;\n  private goalScale = 1;\n  private xDamper = new Damper();\n  private yDamper = new Damper();\n  private zDamper = new Damper();\n  private yawDamper = new Damper();\n  private scaleDamper = new Damper();\n  private damperRate = 1;\n\n  private onExitWebXRButtonContainerClick = () => this.stopPresenting();\n\n  constructor(private renderer: Renderer) {\n    super();\n    this.threeRenderer = renderer.threeRenderer;\n    // Turn this off, as the matrix is set directly from webXR rather than using\n    // postion, rotation, scale.\n    this.camera.matrixAutoUpdate = false;\n  }\n\n  async resolveARSession(scene: ModelScene): Promise<XRSession> {\n    assertIsArCandidate();\n\n    const session: XRSession =\n        await navigator.xr!.requestSession!('immersive-ar', {\n          requiredFeatures: ['hit-test'],\n          optionalFeatures: ['dom-overlay'],\n          domOverlay:\n              {root: scene.element.shadowRoot!.querySelector('div.default')}\n        });\n\n    const gl = this.threeRenderer.getContext();\n    // `makeXRCompatible` replaced `setCompatibleXRDevice` in Chrome M73 @TODO\n    // #293, handle WebXR API changes. WARNING: this can cause a GL context\n    // loss according to the spec, though current implementations don't do so.\n    await gl.makeXRCompatible();\n\n    session.updateRenderState(\n        {baseLayer: new XRWebGLLayer(session, gl, {alpha: true})});\n\n    // The render state update takes effect on the next animation frame. Wait\n    // for it so that we get a framebuffer.\n    let waitForXRAnimationFrame = new Promise((resolve, _reject) => {\n      session.requestAnimationFrame(() => resolve());\n    });\n    await waitForXRAnimationFrame;\n\n    scene.element[$onResize](window.screen);\n\n    const {framebuffer, framebufferWidth, framebufferHeight} =\n        session.renderState.baseLayer!;\n    // Redirect rendering to the WebXR offscreen framebuffer.\n    // TODO: this method should be added to three.js's exported interface.\n    (this.threeRenderer as any).setFramebuffer(framebuffer);\n    this.threeRenderer.setPixelRatio(1);\n    this.threeRenderer.setSize(framebufferWidth, framebufferHeight, false);\n\n    const exitButton = scene.element.shadowRoot!.querySelector(\n                           '.slot.exit-webxr-ar-button') as HTMLElement;\n    exitButton.classList.add('enabled');\n    exitButton.addEventListener('click', this.onExitWebXRButtonContainerClick);\n    this.exitWebXRButtonContainer = exitButton;\n\n    return session;\n  }\n\n  /**\n   * The currently presented scene, if any\n   */\n  get presentedScene() {\n    return this._presentedScene;\n  }\n\n  /**\n   * Resolves to true if the renderer has detected all the necessary qualities\n   * to support presentation in AR.\n   */\n  async supportsPresentation() {\n    try {\n      assertIsArCandidate();\n      return await navigator.xr!.isSessionSupported('immersive-ar');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Present a scene in AR\n   */\n  async present(scene: ModelScene): Promise<void> {\n    if (this.isPresenting) {\n      console.warn('Cannot present while a model is already presenting');\n    }\n\n    let waitForAnimationFrame = new Promise((resolve, _reject) => {\n      requestAnimationFrame(() => resolve());\n    });\n\n    scene.setHotspotsVisibility(false);\n    scene.isDirty = true;\n    // Render a frame to turn off the hotspots\n    await waitForAnimationFrame;\n\n    // This sets isPresenting to true\n    this._presentedScene = scene;\n\n    const currentSession = await this.resolveARSession(scene);\n    currentSession.addEventListener('end', () => {\n      this.postSessionCleanup();\n    }, {once: true});\n\n    this.refSpace = await currentSession.requestReferenceSpace('local');\n    this.viewerRefSpace = await currentSession.requestReferenceSpace('viewer');\n\n    scene.setCamera(this.camera);\n    this.initialized = false;\n    this.damperRate = INTRO_DAMPER_RATE;\n\n    this.turntableRotation = scene.yaw;\n    scene.yaw = 0;\n    this.goalYaw = 0;\n    this.goalScale = 1;\n\n    this.oldBackground = scene.background;\n    scene.background = null;\n\n    this.oldShadowIntensity = scene.shadowIntensity;\n    scene.setShadowIntensity(0);\n\n    this.oldTarget.copy(scene.getTarget());\n\n    scene.addEventListener('model-load', this.onUpdateScene);\n\n    const radians = HIT_ANGLE_DEG * Math.PI / 180;\n    const ray = this.placeOnWall === true ?\n        undefined :\n        new XRRay(\n            new DOMPoint(0, 0, 0),\n            {x: 0, y: -Math.sin(radians), z: -Math.cos(radians)});\n    currentSession\n        .requestHitTestSource({space: this.viewerRefSpace!, offsetRay: ray})\n        .then(hitTestSource => {\n          this.initialHitSource = hitTestSource;\n        });\n\n    this.currentSession = currentSession;\n    this.placementBox =\n        new PlacementBox(scene, this.placeOnWall ? 'back' : 'bottom');\n    this.placementComplete = false;\n    this.lastTick = performance.now();\n\n    // Start the event loop.\n    this.tick();\n  }\n\n  /**\n   * If currently presenting a scene in AR, stops presentation and exits AR.\n   */\n  async stopPresenting() {\n    if (!this.isPresenting) {\n      return;\n    }\n\n    const cleanupPromise = new Promise((resolve) => {\n      this.resolveCleanup = resolve;\n    });\n\n    try {\n      await this.currentSession!.end();\n      await cleanupPromise;\n    } catch (error) {\n      console.warn('Error while trying to end AR session');\n      console.warn(error);\n\n      this.postSessionCleanup();\n    }\n  }\n\n  /**\n   * True if a scene is currently in the process of being presented in AR\n   */\n  get isPresenting(): boolean {\n    return this.presentedScene != null;\n  }\n\n  get target(): Vector3 {\n    return this.oldTarget;\n  }\n\n  updateTarget() {\n    const scene = this.presentedScene;\n    if (scene != null) {\n      const target = scene.getTarget();\n      this.oldTarget.copy(target);\n      if (this.placeOnWall) {\n        // Move the scene's target to the center of the back of the model's\n        // bounding box.\n        scene.setTarget(target.x, target.y, scene.boundingBox.min.z);\n      } else {\n        // Move the scene's target to the model's floor height.\n        scene.setTarget(target.x, scene.boundingBox.min.y, target.z);\n      }\n    }\n  }\n\n  onUpdateScene = () => {\n    if (this.placementBox != null && this.isPresenting) {\n      this.placementBox!.dispose();\n      this.placementBox = new PlacementBox(\n          this.presentedScene!, this.placeOnWall ? 'back' : 'bottom');\n    }\n  };\n\n  private postSessionCleanup() {\n    // The offscreen WebXR framebuffer is now invalid, switch\n    // back to the default framebuffer for canvas output.\n    // TODO: this method should be added to three.js's exported interface.\n    (this.threeRenderer as any).setFramebuffer(null);\n\n    const session = this.currentSession;\n    if (session != null) {\n      session.removeEventListener('selectstart', this.onSelectStart);\n      session.removeEventListener('selectend', this.onSelectEnd);\n      session.cancelAnimationFrame(this.rafId!);\n      this.currentSession = null;\n    }\n\n    const scene = this.presentedScene;\n    if (scene != null) {\n      const {target, element} = scene;\n      scene.setCamera(scene.camera);\n      target.remove(this.placementBox!);\n\n      scene.position.set(0, 0, 0);\n      scene.scale.set(1, 1, 1);\n      scene.setShadowScaleAndOffset(1, 0);\n      const yaw = this.turntableRotation;\n      if (yaw != null) {\n        scene.yaw = yaw;\n      }\n      const intensity = this.oldShadowIntensity;\n      if (intensity != null) {\n        scene.setShadowIntensity(intensity);\n      }\n      const background = this.oldBackground;\n      if (background != null) {\n        scene.background = background;\n      }\n      const point = this.oldTarget;\n      scene.setTarget(point.x, point.y, point.z);\n\n      scene.removeEventListener('model-load', this.onUpdateScene);\n      scene.orientHotspots(0);\n      element.requestUpdate('cameraTarget');\n      element[$onResize](element.getBoundingClientRect());\n    }\n\n    // Force the Renderer to update its size\n    this.renderer.height = 0;\n\n    const exitButton = this.exitWebXRButtonContainer;\n    if (exitButton != null) {\n      exitButton.classList.remove('enabled');\n      exitButton.removeEventListener(\n          'click', this.onExitWebXRButtonContainerClick);\n      this.exitWebXRButtonContainer = null;\n    }\n\n    const hitSource = this.transientHitTestSource;\n    if (hitSource != null) {\n      hitSource.cancel();\n      this.transientHitTestSource = null;\n    }\n\n    const hitSourceInitial = this.initialHitSource;\n    if (hitSourceInitial != null) {\n      hitSourceInitial.cancel();\n      this.initialHitSource = null;\n    }\n\n    if (this.placementBox != null) {\n      this.placementBox!.dispose();\n      this.placementBox = null;\n    }\n\n    this.lastTick = null;\n    this.turntableRotation = null;\n    this.oldShadowIntensity = null;\n    this.oldBackground = null;\n    this.rafId = null;\n    this.refSpace = null;\n    this._presentedScene = null;\n    this.viewerRefSpace = null;\n    this.frame = null;\n    this.inputSource = null;\n\n    if (this.resolveCleanup != null) {\n      this.resolveCleanup!();\n    }\n\n    this.dispatchEvent({type: 'status', status: ARStatus.NOT_PRESENTING});\n  }\n\n  private updateCamera(view: XRView) {\n    const {camera} = this;\n    const {matrix: cameraMatrix} = camera;\n\n    cameraMatrix.fromArray(view.transform.matrix);\n    camera.updateMatrixWorld(true);\n    // position is not updated when matrix is updated.\n    camera.position.setFromMatrixPosition(cameraMatrix);\n\n    if (!this.initialized) {\n      camera.projectionMatrix.fromArray(view.projectionMatrix);\n      // Have to set the inverse manually when setting matrix directly. This is\n      // needed for raycasting.\n      camera.projectionMatrixInverse.copy(camera.projectionMatrix).invert();\n      // Orient model toward camera on first frame.\n      const scene = this.presentedScene!;\n      camera.getWorldDirection(vector3);\n      scene.yaw = Math.atan2(-vector3.x, -vector3.z);\n      this.goalYaw = scene.yaw;\n      this.initialModelToWorld = new Matrix4().copy(scene.matrixWorld);\n      scene.setHotspotsVisibility(true);\n      this.initialized = true;\n      this.dispatchEvent({type: 'status', status: ARStatus.SESSION_STARTED});\n    }\n\n    if (this.initialHitSource != null) {\n      // Target locked to screen center\n      const {position, idealCameraDistance: radius} = this.presentedScene!;\n      camera.getWorldDirection(position);\n      position.multiplyScalar(radius);\n      position.add(camera.position);\n    }\n\n    // Use automatic dynamic viewport scaling if supported.\n    if (view.requestViewportScale && view.recommendedViewportScale) {\n      const scale = view.recommendedViewportScale;\n      view.requestViewportScale(Math.max(scale, MIN_VIEWPORT_SCALE));\n    }\n    const layer = this.currentSession!.renderState.baseLayer;\n    const viewport = layer!.getViewport(view);\n    this.threeRenderer.setViewport(\n        viewport.x, viewport.y, viewport.width, viewport.height);\n\n    this.presentedScene!.orientHotspots(\n        Math.atan2(cameraMatrix.elements[1], cameraMatrix.elements[5]));\n  }\n\n  private placeInitially(frame: XRFrame) {\n    const hitSource = this.initialHitSource;\n    if (hitSource == null) {\n      return;\n    }\n\n    const hitTestResults = frame.getHitTestResults(hitSource);\n    if (hitTestResults.length == 0) {\n      return;\n    }\n\n    const hit = hitTestResults[0];\n    const hitPoint = this.getHitPoint(hit);\n    if (hitPoint == null) {\n      return;\n    }\n\n    this.placeModel(hitPoint);\n\n    hitSource.cancel();\n    this.initialHitSource = null;\n\n    const {session} = frame;\n    session.addEventListener('selectstart', this.onSelectStart);\n    session.addEventListener('selectend', this.onSelectEnd);\n    session\n        .requestHitTestSourceForTransientInput({profile: 'generic-touchscreen'})\n        .then(hitTestSource => {\n          this.transientHitTestSource = hitTestSource;\n        });\n  }\n\n  private getHitPoint(hitResult: XRHitTestResult): Vector3|null {\n    const pose = hitResult.getPose(this.refSpace!);\n    if (pose == null) {\n      return null;\n    }\n\n    const hitMatrix = matrix4.fromArray(pose.transform.matrix);\n\n    if (this.placeOnWall === true) {\n      // Orient the model to the wall's normal vector.\n      this.goalYaw = Math.atan2(hitMatrix.elements[4], hitMatrix.elements[6]);\n    }\n    // Check that the y-coordinate of the normal is large enough that the normal\n    // is pointing up for floor placement; opposite for wall placement.\n    return hitMatrix.elements[5] > 0.75 !== this.placeOnWall ?\n        hitPosition.setFromMatrixPosition(hitMatrix) :\n        null;\n  }\n\n  /**\n   * This sets the initial model placement based on the input hit point. The\n   * bottom of the model will be placed on the floor (the shadow will rest on\n   * the input's y-coordinate). The XZ placement is found by first putting the\n   * scene's target at the hit point, drawing a ray from the camera to the\n   * target, and finding the XZ-intersection of this ray with the model's\n   * bounding box. The scene is then translated on the XZ plane to position this\n   * intersection point at the input hit point. If the ray does not intersect,\n   * the target is left at the hit point.\n   *\n   * This ensures the model is placed according to the chosen target, is not\n   * reoriented, and does not intersect the camera even when the model\n   * is large (unless the target is chosen outside of the model's bounding box).\n   *\n   * Only a public method to make it testable.\n   */\n  public placeModel(hit: Vector3) {\n    const scene = this.presentedScene!;\n\n    this.placementBox!.show = true;\n\n    const goal = this.goalPosition;\n    goal.copy(hit);\n\n    if (this.placeOnWall === false) {\n      const floor = hit.y;\n\n      const origin = this.camera.position.clone();\n      const direction = hit.clone().sub(origin).normalize();\n      // Pull camera back enough to be outside of large models.\n      origin.sub(direction.multiplyScalar(scene.idealCameraDistance));\n      const ray = new Ray(origin, direction.normalize());\n\n      const modelToWorld = this.initialModelToWorld!;\n      const modelPosition =\n          new Vector3().setFromMatrixPosition(modelToWorld).add(hit);\n      modelToWorld.setPosition(modelPosition);\n      ray.applyMatrix4(modelToWorld.invert());\n\n      // Make the box tall so that we don't intersect the top face.\n      const {max} = scene.boundingBox;\n      max.y += 10;\n      ray.intersectBox(scene.boundingBox, modelPosition);\n      max.y -= 10;\n\n      if (modelPosition != null) {\n        modelPosition.applyMatrix4(modelToWorld);\n        goal.add(hit).sub(modelPosition);\n      }\n      // Ignore the y-coordinate and set on the floor instead.\n      goal.y = floor;\n    }\n\n    this.updateTarget();\n\n    this.dispatchEvent({type: 'status', status: ARStatus.OBJECT_PLACED});\n  }\n\n  private onSelectStart = (event: Event) => {\n    const hitSource = this.transientHitTestSource;\n    if (hitSource == null) {\n      return;\n    }\n    const fingers = this.frame!.getHitTestResultsForTransientInput(hitSource);\n    const scene = this.presentedScene!;\n    const box = this.placementBox!;\n\n    if (fingers.length === 1) {\n      this.inputSource = (event as XRInputSourceEvent).inputSource;\n      const {axes} = this.inputSource!.gamepad;\n\n      const hitPosition = box.getHit(this.presentedScene!, axes[0], axes[1]);\n      box.show = true;\n\n      if (hitPosition != null) {\n        this.isTranslating = true;\n        this.lastDragPosition.copy(hitPosition);\n      } else if (this.placeOnWall === false) {\n        this.isRotating = true;\n        this.lastScalar = axes[0];\n      }\n    } else if (fingers.length === 2 && scene.canScale) {\n      box.show = true;\n      this.isScaling = true;\n      this.lastScalar = this.fingerSeparation(fingers) / scene.scale.x;\n    }\n  };\n\n  private onSelectEnd = () => {\n    this.isTranslating = false;\n    this.isRotating = false;\n    this.isScaling = false;\n    this.inputSource = null;\n    this.goalPosition.y +=\n        this.placementBox!.offsetHeight * this.presentedScene!.scale.x;\n    this.placementBox!.show = false\n  };\n\n  private fingerSeparation(fingers: XRTransientInputHitTestResult[]): number {\n    const fingerOne = fingers[0].inputSource.gamepad.axes;\n    const fingerTwo = fingers[1].inputSource.gamepad.axes;\n    const deltaX = fingerTwo[0] - fingerOne[0];\n    const deltaY = fingerTwo[1] - fingerOne[1];\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  }\n\n  private processInput(frame: XRFrame) {\n    const hitSource = this.transientHitTestSource;\n    if (hitSource == null) {\n      return;\n    }\n    if (!this.isTranslating && !this.isScaling && !this.isRotating) {\n      return;\n    }\n    const fingers = frame.getHitTestResultsForTransientInput(hitSource);\n    const scene = this.presentedScene!;\n    const scale = scene.scale.x;\n\n    // Rotating, translating and scaling are mutually exclusive operations; only\n    // one can happen at a time, but we can switch during a gesture.\n    if (this.isScaling) {\n      if (fingers.length < 2) {\n        // If we lose the second finger, stop scaling (in fact, stop processing\n        // input altogether until a new gesture starts).\n        this.isScaling = false;\n      } else {\n        const separation = this.fingerSeparation(fingers);\n        const scale = separation / this.lastScalar;\n        this.goalScale =\n            (scale < SCALE_SNAP_HIGH && scale > SCALE_SNAP_LOW) ? 1 : scale;\n      }\n      return;\n    } else if (fingers.length === 2 && scene.canScale) {\n      // If we were rotating or translating and we get a second finger, switch\n      // to scaling instead.\n      this.isTranslating = false;\n      this.isRotating = false;\n      this.isScaling = true;\n      this.lastScalar = this.fingerSeparation(fingers) / scale;\n      return;\n    }\n\n    if (this.isRotating) {\n      const thisDragX = this.inputSource!.gamepad.axes[0];\n      this.goalYaw += (thisDragX - this.lastScalar) * ROTATION_RATE;\n      this.lastScalar = thisDragX;\n    } else if (this.isTranslating) {\n      fingers.forEach(finger => {\n        if (finger.inputSource !== this.inputSource ||\n            finger.results.length < 1) {\n          return;\n        }\n\n        const hit = this.getHitPoint(finger.results[0]);\n        if (hit == null) {\n          return;\n        }\n\n        this.goalPosition.sub(this.lastDragPosition);\n\n        if (this.placeOnWall === false) {\n          const offset = hit.y - this.lastDragPosition.y;\n          // When a lower floor is found, keep the model at the same height, but\n          // drop the placement box to the floor. The model falls on select end.\n          if (offset < 0) {\n            this.placementBox!.offsetHeight = offset / scale;\n            this.presentedScene!.setShadowScaleAndOffset(scale, offset);\n            // Interpolate hit ray up to drag plane\n            const cameraPosition = vector3.copy(this.camera.position);\n            const alpha = -offset / (cameraPosition.y - hit.y);\n            cameraPosition.multiplyScalar(alpha);\n            hit.multiplyScalar(1 - alpha).add(cameraPosition);\n          }\n        }\n\n        this.goalPosition.add(hit);\n        this.lastDragPosition.copy(hit);\n      });\n    }\n  }\n\n  private moveScene(delta: number) {\n    const scene = this.presentedScene!;\n    const {position, yaw, idealCameraDistance: radius} = scene;\n    const goal = this.goalPosition;\n    const oldScale = scene.scale.x;\n    const box = this.placementBox!;\n\n    if (this.initialHitSource == null &&\n        (!goal.equals(position) || this.goalScale !== oldScale)) {\n      let {x, y, z} = position;\n      delta *= this.damperRate;\n      x = this.xDamper.update(x, goal.x, delta, radius);\n      y = this.yDamper.update(y, goal.y, delta, radius);\n      z = this.zDamper.update(z, goal.z, delta, radius);\n      position.set(x, y, z);\n\n      const newScale =\n          this.scaleDamper.update(oldScale, this.goalScale, delta, 1);\n      scene.scale.set(newScale, newScale, newScale);\n\n      if (!this.isTranslating) {\n        const offset = goal.y - y;\n        if (this.placementComplete && this.placeOnWall === false) {\n          box.offsetHeight = offset / newScale;\n          scene.setShadowScaleAndOffset(newScale, offset);\n        } else if (offset === 0) {\n          this.placementComplete = true;\n          box.show = false;\n          scene.setShadowIntensity(AR_SHADOW_INTENSITY);\n          this.damperRate = 1;\n        }\n      }\n    }\n    box.updateOpacity(delta);\n    scene.updateTarget(delta);\n    // yaw must be updated last, since this also updates the shadow position.\n    scene.yaw = this.yawDamper.update(yaw, this.goalYaw, delta, Math.PI);\n  }\n\n  private tick() {\n    this.rafId = this.currentSession!.requestAnimationFrame(\n        (time, frame) => this.onWebXRFrame(time, frame));\n  }\n\n  /**\n   * Only public to make it testable.\n   */\n  public onWebXRFrame(time: number, frame: XRFrame) {\n    this.frame = frame;\n    const pose = frame.getViewerPose(this.refSpace!);\n\n    // TODO: Notify external observers of tick\n    this.tick();\n\n    const scene = this.presentedScene;\n    if (pose == null || scene == null) {\n      return;\n    }\n\n    // WebXR may return multiple views, i.e. for headset AR. This\n    // isn't really supported at this point, but make a best-effort\n    // attempt to render other views also, using the first view\n    // as the main viewpoint.\n    let isFirstView: boolean = true;\n    for (const view of pose.views) {\n      this.updateCamera(view);\n\n      if (isFirstView) {\n        this.placeInitially(frame);\n\n        this.processInput(frame);\n\n        const delta = time - this.lastTick!;\n        this.moveScene(delta);\n        this.renderer.preRender(scene, time, delta);\n        this.lastTick = time;\n      }\n\n      // TODO: This is a workaround for a Chrome bug, which should be fixed\n      // soon: https://bugs.chromium.org/p/chromium/issues/detail?id=1184085\n      const gl = this.threeRenderer.context;\n      gl.depthMask(false);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      gl.depthMask(true);\n\n      this.threeRenderer.render(scene, this.camera);\n      isFirstView = false;\n    }\n  }\n}\n"]}