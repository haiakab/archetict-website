{"version":3,"file":"Renderer.js","sourceRoot":"","sources":["../../src/three-components/Renderer.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ACESFilmicToneMapping, Event, EventDispatcher, GammaEncoding, PCFSoftShadowMap, WebGL1Renderer} from 'three';\nimport {RoughnessMipmapper} from 'three/examples/jsm/utils/RoughnessMipmapper';\n\nimport {USE_OFFSCREEN_CANVAS} from '../constants.js';\nimport {$canvas, $tick, $updateSize} from '../model-viewer-base.js';\nimport {clamp, isDebugMode, resolveDpr} from '../utilities.js';\n\nimport {ARRenderer} from './ARRenderer.js';\nimport {CachingGLTFLoader} from './CachingGLTFLoader.js';\nimport {Debugger} from './Debugger.js';\nimport {ModelViewerGLTFInstance} from './gltf-instance/ModelViewerGLTFInstance.js';\nimport {ModelScene} from './ModelScene.js';\nimport TextureUtils from './TextureUtils.js';\n\nexport interface RendererOptions {\n  debug?: boolean;\n}\n\nexport interface ContextLostEvent extends Event {\n  type: 'contextlost';\n  sourceEvent: WebGLContextEvent;\n}\n\n// Between 0 and 1: larger means the average responds faster and is less smooth.\nconst DURATION_DECAY = 0.2;\nconst LOW_FRAME_DURATION_MS = 18;\nconst HIGH_FRAME_DURATION_MS = 26;\nconst MAX_AVG_CHANGE_MS = 2;\nconst SCALE_STEPS = [1, 0.79, 0.62, 0.5, 0.4, 0.31, 0.25];\nconst DEFAULT_LAST_STEP = 3;\n\n/**\n * Registers canvases with Canvas2DRenderingContexts and renders them\n * all in the same WebGLRenderingContext, spitting out textures to apply\n * to the canvases. Creates a fullscreen WebGL canvas that is not added\n * to the DOM, and on each frame, renders each registered canvas on a portion\n * of the WebGL canvas, and applies the texture on the registered canvas.\n *\n * In the future, can use ImageBitmapRenderingContext instead of\n * Canvas2DRenderingContext if supported for cheaper transfering of\n * the texture.\n */\nexport class Renderer extends EventDispatcher {\n  static _singleton = new Renderer({debug: isDebugMode()});\n\n  static get singleton() {\n    return this._singleton;\n  }\n\n  static resetSingleton() {\n    this._singleton.dispose();\n    this._singleton = new Renderer({debug: isDebugMode()});\n  }\n\n  public threeRenderer!: WebGL1Renderer;\n  public canvasElement: HTMLCanvasElement;\n  public canvas3D: HTMLCanvasElement|OffscreenCanvas;\n  public textureUtils: TextureUtils|null;\n  public arRenderer: ARRenderer;\n  public roughnessMipmapper: RoughnessMipmapper;\n  public loader = new CachingGLTFLoader(ModelViewerGLTFInstance);\n  public width = 0;\n  public height = 0;\n  public dpr = 1;\n\n  protected debugger: Debugger|null = null;\n  private scenes: Set<ModelScene> = new Set();\n  private multipleScenesVisible = false;\n  private lastTick: number;\n  private scaleStep = 0;\n  private lastStep = DEFAULT_LAST_STEP;\n  private avgFrameDuration =\n      (HIGH_FRAME_DURATION_MS + LOW_FRAME_DURATION_MS) / 2;\n\n  get canRender() {\n    return this.threeRenderer != null;\n  }\n\n  get scaleFactor() {\n    return SCALE_STEPS[this.scaleStep];\n  }\n\n  set minScale(scale: number) {\n    let i = 1;\n    while (i < SCALE_STEPS.length) {\n      if (SCALE_STEPS[i] < scale) {\n        break;\n      }\n      ++i;\n    }\n    this.lastStep = i - 1;\n  }\n\n  constructor(options?: RendererOptions) {\n    super();\n\n    this.dpr = resolveDpr();\n\n    this.canvasElement = document.createElement('canvas');\n    this.canvasElement.id = 'webgl-canvas';\n\n    this.canvas3D = USE_OFFSCREEN_CANVAS ?\n        this.canvasElement.transferControlToOffscreen() :\n        this.canvasElement;\n\n    this.canvas3D.addEventListener('webglcontextlost', this.onWebGLContextLost);\n\n    try {\n      this.threeRenderer = new WebGL1Renderer({\n        canvas: this.canvas3D,\n        alpha: true,\n        antialias: true,\n        powerPreference: 'high-performance' as WebGLPowerPreference,\n        preserveDrawingBuffer: true\n      });\n      this.threeRenderer.autoClear = true;\n      this.threeRenderer.outputEncoding = GammaEncoding;\n      this.threeRenderer.physicallyCorrectLights = true;\n      this.threeRenderer.setPixelRatio(1);  // handle pixel ratio externally\n      this.threeRenderer.shadowMap.enabled = true;\n      this.threeRenderer.shadowMap.type = PCFSoftShadowMap;\n      this.threeRenderer.shadowMap.autoUpdate = false;\n\n      this.debugger =\n          options != null && !!options.debug ? new Debugger(this) : null;\n      this.threeRenderer.debug = {checkShaderErrors: !!this.debugger};\n\n      // ACESFilmicToneMapping appears to be the most \"saturated\",\n      // and similar to Filament's gltf-viewer.\n      this.threeRenderer.toneMapping = ACESFilmicToneMapping;\n    } catch (error) {\n      console.warn(error);\n    }\n\n    this.arRenderer = new ARRenderer(this);\n    this.textureUtils =\n        this.canRender ? new TextureUtils(this.threeRenderer) : null;\n    this.roughnessMipmapper = new RoughnessMipmapper(this.threeRenderer);\n    CachingGLTFLoader.initializeKTX2Loader(this.threeRenderer);\n\n    this.updateRendererSize();\n    this.lastTick = performance.now();\n    this.avgFrameDuration = 0;\n  }\n\n  /**\n   * Updates the renderer's size based on the largest scene and any changes to\n   * device pixel ratio.\n   */\n  private updateRendererSize() {\n    const dpr = resolveDpr();\n    if (dpr !== this.dpr) {\n      // If the device pixel ratio has changed due to page zoom, elements\n      // specified by % width do not fire a resize event even though their CSS\n      // pixel dimensions change, so we force them to update their size here.\n      for (const scene of this.scenes) {\n        const {element} = scene;\n        element[$updateSize](element.getBoundingClientRect());\n      }\n    }\n\n    // Make the renderer the size of the largest scene\n    let width = 0;\n    let height = 0;\n    for (const scene of this.scenes) {\n      width = Math.max(width, scene.width);\n      height = Math.max(height, scene.height);\n    }\n\n    if (width === this.width && height === this.height && dpr === this.dpr) {\n      return;\n    }\n    this.width = width;\n    this.height = height;\n    this.dpr = dpr;\n\n    if (this.canRender) {\n      this.threeRenderer.setSize(width * dpr, height * dpr, false);\n    }\n\n    // Expand the canvas size to make up for shrinking the viewport.\n    const scale = this.scaleFactor;\n    const widthCSS = width / scale;\n    const heightCSS = height / scale;\n    // The canvas element must by styled outside of three due to the offscreen\n    // canvas not being directly stylable.\n    this.canvasElement.style.width = `${widthCSS}px`;\n    this.canvasElement.style.height = `${heightCSS}px`;\n\n    // Each scene's canvas must match the renderer size. In general they can be\n    // larger than the element that contains them, but the overflow is hidden\n    // and only the portion that is shown is copied over.\n    for (const scene of this.scenes) {\n      const {canvas} = scene;\n      canvas.width = Math.round(width * dpr);\n      canvas.height = Math.round(height * dpr);\n      canvas.style.width = `${widthCSS}px`;\n      canvas.style.height = `${heightCSS}px`;\n      scene.isDirty = true;\n    }\n  }\n\n  private updateRendererScale() {\n    const scaleStep = this.scaleStep;\n    if (this.avgFrameDuration > HIGH_FRAME_DURATION_MS &&\n        this.scaleStep < this.lastStep) {\n      ++this.scaleStep;\n    } else if (\n        this.avgFrameDuration < LOW_FRAME_DURATION_MS && this.scaleStep > 0) {\n      --this.scaleStep;\n    }\n\n    if (scaleStep == this.scaleStep) {\n      return;\n    }\n    const scale = this.scaleFactor;\n    this.avgFrameDuration =\n        (HIGH_FRAME_DURATION_MS + LOW_FRAME_DURATION_MS) / 2;\n\n    const width = this.width / scale;\n    const height = this.height / scale;\n\n    this.canvasElement.style.width = `${width}px`;\n    this.canvasElement.style.height = `${height}px`;\n    for (const scene of this.scenes) {\n      const {style} = scene.canvas;\n      style.width = `${width}px`;\n      style.height = `${height}px`;\n      scene.isDirty = true;\n    }\n  }\n\n  registerScene(scene: ModelScene) {\n    this.scenes.add(scene);\n    const {canvas} = scene;\n    const scale = this.scaleFactor;\n\n    canvas.width = Math.round(this.width * this.dpr);\n    canvas.height = Math.round(this.height * this.dpr);\n\n    canvas.style.width = `${this.width / scale}px`;\n    canvas.style.height = `${this.height / scale}px`;\n\n    if (this.multipleScenesVisible) {\n      canvas.classList.add('show');\n    }\n    scene.isDirty = true;\n\n    if (this.canRender && this.scenes.size > 0) {\n      this.threeRenderer.setAnimationLoop(\n          (time: number, frame?: any) => this.render(time, frame));\n    }\n\n    if (this.debugger != null) {\n      this.debugger.addScene(scene);\n    }\n  }\n\n  unregisterScene(scene: ModelScene) {\n    this.scenes.delete(scene);\n\n    if (this.canRender && this.scenes.size === 0) {\n      (this.threeRenderer.setAnimationLoop as any)(null);\n    }\n\n    if (this.debugger != null) {\n      this.debugger.removeScene(scene);\n    }\n  }\n\n  displayCanvas(scene: ModelScene): HTMLCanvasElement {\n    return this.multipleScenesVisible ? scene.element[$canvas] :\n                                        this.canvasElement;\n  }\n\n  /**\n   * The function enables an optimization, where when there is only a single\n   * <model-viewer> element, we can use the renderer's 3D canvas directly for\n   * display. Otherwise we need to use the element's 2D canvas and copy the\n   * renderer's result into it.\n   */\n  private selectCanvas() {\n    let visibleScenes = 0;\n    let visibleCanvas = null;\n    for (const scene of this.scenes) {\n      const {element} = scene;\n      if (element.modelIsVisible && scene.externalRenderer == null) {\n        ++visibleScenes;\n        visibleCanvas = scene.canvas;\n      }\n    }\n    if (visibleCanvas == null) {\n      return;\n    }\n    const multipleScenesVisible = visibleScenes > 1 || USE_OFFSCREEN_CANVAS;\n    const {canvasElement} = this;\n\n    if (multipleScenesVisible === this.multipleScenesVisible &&\n        (multipleScenesVisible ||\n         canvasElement.parentElement === visibleCanvas.parentElement)) {\n      return;\n    }\n    this.multipleScenesVisible = multipleScenesVisible;\n\n    if (multipleScenesVisible) {\n      canvasElement.classList.remove('show');\n    }\n    for (const scene of this.scenes) {\n      if (scene.externalRenderer != null) {\n        continue;\n      }\n      const canvas = scene.element[$canvas];\n      if (multipleScenesVisible) {\n        canvas.classList.add('show');\n        scene.isDirty = true;\n      } else if (scene.canvas === visibleCanvas) {\n        scene.canvas.parentElement!.appendChild(canvasElement);\n        canvasElement.classList.add('show');\n        canvas.classList.remove('show');\n        scene.isDirty = true;\n      }\n    }\n  }\n\n  /**\n   * Returns an array version of this.scenes where the non-visible ones are\n   * first. This allows eager scenes to be rendered before they are visible,\n   * without needing the multi-canvas render path.\n   */\n  private orderedScenes(): Array<ModelScene> {\n    const scenes = [];\n    for (const visible of [false, true]) {\n      for (const scene of this.scenes) {\n        if (scene.element.modelIsVisible === visible) {\n          scenes.push(scene);\n        }\n      }\n    }\n    return scenes;\n  }\n\n  get isPresenting(): boolean {\n    return this.arRenderer.isPresenting;\n  }\n\n  /**\n   * This method takes care of updating the element and renderer state based on\n   * the time that has passed since the last rendered frame.\n   */\n  preRender(scene: ModelScene, t: number, delta: number) {\n    const {element, exposure} = scene;\n\n    element[$tick](t, delta);\n\n    const exposureIsNumber =\n        typeof exposure === 'number' && !(self as any).isNaN(exposure);\n    this.threeRenderer.toneMappingExposure = exposureIsNumber ? exposure : 1.0;\n\n    if (scene.isShadowDirty()) {\n      this.threeRenderer.shadowMap.needsUpdate = true;\n    }\n  }\n\n  render(t: number, frame?: XRFrame) {\n    if (frame != null) {\n      this.arRenderer.onWebXRFrame(t, frame);\n      this.arRenderer.presentedScene!.postRender();\n      return;\n    }\n\n    const delta = t - this.lastTick;\n    this.lastTick = t;\n\n    if (!this.canRender || this.isPresenting) {\n      return;\n    }\n\n    this.avgFrameDuration += clamp(\n        DURATION_DECAY * (delta - this.avgFrameDuration),\n        -MAX_AVG_CHANGE_MS,\n        MAX_AVG_CHANGE_MS);\n\n    this.selectCanvas();\n    this.updateRendererSize();\n    this.updateRendererScale();\n\n    const {dpr, scaleFactor} = this;\n\n    for (const scene of this.orderedScenes()) {\n      const {element} = scene;\n      if (!element.modelIsVisible && scene.renderCount > 0) {\n        continue;\n      }\n\n      this.preRender(scene, t, delta);\n\n      if (!scene.isDirty) {\n        continue;\n      }\n\n      if (scene.externalRenderer != null) {\n        scene.camera.updateMatrix();\n        const {matrix, projectionMatrix} = scene.camera;\n        const viewMatrix = matrix.elements.slice();\n        const target = scene.getTarget();\n        viewMatrix[12] += target.x;\n        viewMatrix[13] += target.y;\n        viewMatrix[14] += target.z;\n\n        scene.externalRenderer.render({\n          viewMatrix: viewMatrix,\n          projectionMatrix: projectionMatrix.elements\n        });\n        continue;\n      }\n\n      if (!element.modelIsVisible && !this.multipleScenesVisible) {\n        // Here we are pre-rendering on the visible canvas, so we must mark the\n        // visible scene dirty to ensure it overwrites us.\n        for (const visibleScene of this.scenes) {\n          if (visibleScene.element.modelIsVisible) {\n            visibleScene.isDirty = true;\n          }\n        }\n      }\n\n      // We avoid using the Three.js PixelRatio and handle it ourselves here so\n      // that we can do proper rounding and avoid white boundary pixels.\n      const width = Math.min(\n          Math.ceil(scene.width * scaleFactor * dpr), this.canvas3D.width);\n      const height = Math.min(\n          Math.ceil(scene.height * scaleFactor * dpr), this.canvas3D.height);\n\n      // Need to set the render target in order to prevent\n      // clearing the depth from a different buffer\n      this.threeRenderer.setRenderTarget(null);\n      this.threeRenderer.setViewport(\n          0, Math.floor(this.height * dpr) - height, width, height);\n      this.threeRenderer.render(scene, scene.camera);\n\n      scene.postRender();\n\n      if (this.multipleScenesVisible) {\n        if (scene.context == null) {\n          scene.createContext();\n        }\n        if (USE_OFFSCREEN_CANVAS) {\n          const contextBitmap = scene.context as ImageBitmapRenderingContext;\n          const bitmap =\n              (this.canvas3D as OffscreenCanvas).transferToImageBitmap();\n          contextBitmap.transferFromImageBitmap(bitmap);\n        } else {\n          const context2D = scene.context as CanvasRenderingContext2D;\n          context2D.clearRect(0, 0, width, height);\n          context2D.drawImage(\n              this.canvas3D, 0, 0, width, height, 0, 0, width, height);\n        }\n      }\n\n      scene.isDirty = false;\n      if (element.loaded) {\n        ++scene.renderCount;\n      }\n    }\n  }\n\n  dispose() {\n    if (this.textureUtils != null) {\n      this.textureUtils.dispose();\n    }\n\n    if (this.threeRenderer != null) {\n      this.threeRenderer.dispose();\n    }\n\n    this.textureUtils = null;\n    (this as any).threeRenderer = null;\n\n    this.scenes.clear();\n\n    this.canvas3D.removeEventListener(\n        'webglcontextlost', this.onWebGLContextLost);\n  }\n\n  onWebGLContextLost = (event: Event) => {\n    this.dispatchEvent(\n        {type: 'contextlost', sourceEvent: event} as ContextLostEvent);\n  };\n}\n"]}