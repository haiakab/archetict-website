{"version":3,"file":"texture-info.js","sourceRoot":"","sources":["../../../src/features/scene-graph/texture-info.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAOH,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AACrC,OAAO,EAAC,eAAe,EAAC,MAAM,wBAAwB,CAAC;AAGvD,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAEnC;;GAEG;AACH,MAAM,OAAO,WAAY,SAAQ,eAAe;IAI9C,YACI,QAAoB,EAAE,IAAU,EAAE,WAA4B,EAC9D,kBAAqC;QACvC,KAAK,CAAC,QAAQ,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC;QAEjD,MAAM,EAAC,KAAK,EAAE,YAAY,EAAC,GAAG,WAAW,CAAC;QAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,QAAS,CAAC,YAAY,CAAC,CAAC;QAE7C,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC;SAC3E;IACH,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Texture as ThreeTexture} from 'three';\n\nimport {GLTF, TextureInfo as GLTFTextureInfo} from '../../three-components/gltf-instance/gltf-2.0.js';\n\nimport {TextureInfo as TextureInfoInterface} from './api.js';\nimport {Texture} from './texture.js';\nimport {ThreeDOMElement} from './three-dom-element.js';\n\n\nconst $texture = Symbol('texture');\n\n/**\n * TextureInfo facade implementation for Three.js materials\n */\nexport class TextureInfo extends ThreeDOMElement implements\n    TextureInfoInterface {\n  private[$texture]: Texture;\n\n  constructor(\n      onUpdate: () => void, gltf: GLTF, textureInfo: GLTFTextureInfo,\n      correlatedTextures: Set<ThreeTexture>) {\n    super(onUpdate, textureInfo, correlatedTextures);\n\n    const {index: textureIndex} = textureInfo;\n    const texture = gltf.textures![textureIndex];\n\n    if (texture != null) {\n      this[$texture] = new Texture(onUpdate, gltf, texture, correlatedTextures);\n    }\n  }\n\n  get texture(): Texture {\n    return this[$texture];\n  }\n}\n"]}