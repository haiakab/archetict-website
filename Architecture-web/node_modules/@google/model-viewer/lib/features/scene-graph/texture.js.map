{"version":3,"file":"texture.js","sourceRoot":"","sources":["../../../src/features/scene-graph/texture.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAOH,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AACjC,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,eAAe,EAAC,MAAM,wBAAwB,CAAC;AAGtE,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAEnC;;GAEG;AACH,MAAM,OAAO,OAAQ,SAAQ,eAAe;IAI1C,YACI,QAAoB,EAAE,IAAU,EAAE,OAAoB,EACtD,kBAAqC;QACvC,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC;QAE7C,MAAM,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAAC,GAAG,OAAO,CAAC;QAE5D,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;YAC7B,EAAE,CAAC;QACP,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC;QAEpE,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,EAAE;YAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAEtC,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,kBAAkB,CAAC,CAAC;aAChE;SACF;IACH,CAAC;IAED,IAAI,IAAI;QACN,OAAQ,IAAI,CAAC,aAAa,CAAS,CAAC,IAAI,IAAI,EAAE,CAAC;IACjD,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Texture as ThreeTexture} from 'three';\n\nimport {GLTF, Texture as GLTFTexture} from '../../three-components/gltf-instance/gltf-2.0.js';\n\nimport {Texture as TextureInterface} from './api.js';\nimport {Image} from './image.js';\nimport {Sampler} from './sampler.js';\nimport {$sourceObject, ThreeDOMElement} from './three-dom-element.js';\n\n\nconst $source = Symbol('source');\nconst $sampler = Symbol('sampler');\n\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Texture extends ThreeDOMElement implements TextureInterface {\n  private[$source]: Image;\n  private[$sampler]: Sampler;\n\n  constructor(\n      onUpdate: () => void, gltf: GLTF, texture: GLTFTexture,\n      correlatedTextures: Set<ThreeTexture>) {\n    super(onUpdate, texture, correlatedTextures);\n\n    const {sampler: samplerIndex, source: imageIndex} = texture;\n\n    const sampler = (gltf.samplers != null && samplerIndex != null) ?\n        gltf.samplers[samplerIndex] :\n        {};\n    this[$sampler] = new Sampler(onUpdate, sampler, correlatedTextures);\n\n    if (gltf.images != null && imageIndex != null) {\n      const image = gltf.images[imageIndex];\n\n      if (image != null) {\n        this[$source] = new Image(onUpdate, image, correlatedTextures);\n      }\n    }\n  }\n\n  get name(): string {\n    return (this[$sourceObject] as any).name || '';\n  }\n\n  get sampler(): Sampler {\n    return this[$sampler];\n  }\n\n  get source(): Image {\n    return this[$source];\n  }\n}\n"]}