{"version":3,"file":"annotation.js","sourceRoot":"","sources":["../../src/features/annotation.ts"],"names":[],"mappings":"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","sourcesContent":["\n/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Matrix3, Matrix4, Vector2} from 'three';\n\nimport ModelViewerElementBase, {$needsRender, $scene, toVector3D, Vector3D} from '../model-viewer-base.js';\nimport {Hotspot, HotspotConfiguration} from '../three-components/Hotspot.js';\nimport {Constructor} from '../utilities.js';\n\nconst $hotspotMap = Symbol('hotspotMap');\nconst $mutationCallback = Symbol('mutationCallback');\nconst $observer = Symbol('observer');\nconst $addHotspot = Symbol('addHotspot');\nconst $removeHotspot = Symbol('removeHotspot');\n\n// Used internally by positionAndNormalFromPoint()\nconst pixelPosition = new Vector2();\nconst worldToModel = new Matrix4();\nconst worldToModelNormal = new Matrix3();\n\nexport declare interface AnnotationInterface {\n  updateHotspot(config: HotspotConfiguration): void;\n  positionAndNormalFromPoint(pixelX: number, pixelY: number):\n      {position: Vector3D, normal: Vector3D}|null\n}\n\n/**\n * AnnotationMixin implements a declarative API to add hotspots and annotations.\n * Child elements of the <model-viewer> element that have a slot name that\n * begins with \"hotspot\" and data-position and data-normal attributes in\n * the format of the camera-target attribute will be added to the scene and\n * track the specified model coordinates.\n */\nexport const AnnotationMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement: T): Constructor<AnnotationInterface>&T => {\n  class AnnotationModelViewerElement extends ModelViewerElement {\n    private[$hotspotMap] = new Map<string, Hotspot>();\n    private[$mutationCallback] = (mutations: Array<unknown>) => {\n      mutations.forEach((mutation) => {\n        // NOTE: Be wary that in ShadyDOM cases, the MutationRecord\n        // only has addedNodes and removedNodes (and no other details).\n        if (!(mutation instanceof MutationRecord) ||\n            mutation.type === 'childList') {\n          (mutation as MutationRecord).addedNodes.forEach((node) => {\n            this[$addHotspot](node);\n          });\n          (mutation as MutationRecord).removedNodes.forEach((node) => {\n            this[$removeHotspot](node);\n          });\n          this[$needsRender]();\n        }\n      });\n    };\n    private[$observer] = new MutationObserver(this[$mutationCallback]);\n\n    connectedCallback() {\n      super.connectedCallback();\n\n      for (let i = 0; i < this.children.length; ++i) {\n        this[$addHotspot](this.children[i]);\n      }\n\n      const {ShadyDOM} = self as any;\n\n      if (ShadyDOM == null) {\n        this[$observer].observe(this, {childList: true});\n      } else {\n        this[$observer] =\n            ShadyDOM.observeChildren(this, this[$mutationCallback]);\n      }\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      const {ShadyDOM} = self as any;\n\n      if (ShadyDOM == null) {\n        this[$observer].disconnect();\n      } else {\n        ShadyDOM.unobserveChildren(this[$observer]);\n      }\n    }\n\n    /**\n     * Since the data-position and data-normal attributes are not observed, use\n     * this method to move a hotspot. Keep in mind that all hotspots with the\n     * same slot name use a single location and the first definition takes\n     * precedence, until updated with this method.\n     */\n    updateHotspot(config: HotspotConfiguration) {\n      const hotspot = this[$hotspotMap].get(config.name);\n\n      if (hotspot == null) {\n        return;\n      }\n\n      hotspot.updatePosition(config.position);\n      hotspot.updateNormal(config.normal);\n      this[$needsRender]();\n    }\n\n    /**\n     * This method returns the model position and normal of the point on the\n     * mesh corresponding to the input pixel coordinates given relative to the\n     * model-viewer element. The position and normal are returned as strings in\n     * the format suitable for putting in a hotspot's data-position and\n     * data-normal attributes. If the mesh is not hit, the result is null.\n     */\n    positionAndNormalFromPoint(pixelX: number, pixelY: number):\n        {position: Vector3D, normal: Vector3D}|null {\n      const scene = this[$scene];\n      const {width, height, target} = scene;\n      pixelPosition.set(pixelX / width, pixelY / height)\n          .multiplyScalar(2)\n          .subScalar(1);\n      pixelPosition.y *= -1;\n\n      const hit = scene.positionAndNormalFromPoint(pixelPosition);\n      if (hit == null) {\n        return null;\n      }\n\n      worldToModel.copy(target.matrixWorld).invert();\n      const position = toVector3D(hit.position.applyMatrix4(worldToModel));\n\n      worldToModelNormal.getNormalMatrix(worldToModel);\n      const normal =\n          toVector3D(hit.normal.applyNormalMatrix(worldToModelNormal));\n\n      return {position: position, normal: normal};\n    }\n\n    private[$addHotspot](node: Node) {\n      if (!(node instanceof HTMLElement &&\n            node.slot.indexOf('hotspot') === 0)) {\n        return;\n      }\n\n      let hotspot = this[$hotspotMap].get(node.slot);\n\n      if (hotspot != null) {\n        hotspot.increment();\n      } else {\n        hotspot = new Hotspot({\n          name: node.slot,\n          position: node.dataset.position,\n          normal: node.dataset.normal,\n        });\n        this[$hotspotMap].set(node.slot, hotspot);\n        this[$scene].addHotspot(hotspot);\n      }\n      this[$scene].isDirty = true;\n    }\n\n    private[$removeHotspot](node: Node) {\n      if (!(node instanceof HTMLElement)) {\n        return;\n      }\n\n      const hotspot = this[$hotspotMap].get(node.slot);\n\n      if (!hotspot) {\n        return;\n      }\n\n      if (hotspot.decrement()) {\n        this[$scene].removeHotspot(hotspot);\n        this[$hotspotMap].delete(node.slot);\n      }\n      this[$scene].isDirty = true;\n    }\n  }\n\n  return AnnotationModelViewerElement;\n};\n"]}