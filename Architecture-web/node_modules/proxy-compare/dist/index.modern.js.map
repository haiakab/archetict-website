{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["// symbols\nconst OWN_KEYS_SYMBOL = Symbol();\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst FROZEN_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// check if frozen\nconst isFrozen = (obj: object) => (\n  Object.isFrozen(obj) || (\n    // Object.isFrozen() doesn't detect non-writable properties\n    // See: https://github.com/dai-shi/proxy-compare/pull/8\n    Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n      (descriptor) => !descriptor.writable,\n    )\n  )\n);\n\n// copy frozen object\nconst unfreeze = (obj: object) => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj);\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype Affected = WeakMap<object, Set<string | number | symbol>>;\ntype ProxyCache<T extends object> = WeakMap<object, ProxyHandler<T>>;\ntype ProxyHandler<T extends object> = {\n  [FROZEN_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object>;\n  [AFFECTED_PROPERTY]?: Affected;\n  get(target: T, key: string | number | symbol): unknown;\n  has(target: T, key: string | number | symbol): boolean;\n  ownKeys(target: T): (string | number | symbol)[];\n  set?(target: T, key: string | number | symbol, value: unknown): boolean;\n  deleteProperty?(target: T, key: string | number | symbol): boolean;\n};\n\nconst createProxyHandler = <T extends object>(origObj: T, frozen: boolean) => {\n  let trackObject = false; // for trackMemo\n  const recordUsage = (h: ProxyHandler<T>, key: string | number | symbol) => {\n    if (!trackObject) {\n      let used = (h[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = new Set();\n        (h[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      used.add(key);\n    }\n  };\n  const recordObjectAsUsed = (h: ProxyHandler<T>) => {\n    trackObject = true;\n    (h[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    [FROZEN_PROPERTY]: frozen,\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(this, key);\n      return createDeepProxy(\n        (target as any)[key],\n        (this[AFFECTED_PROPERTY] as Affected),\n        this[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed(this);\n        return true;\n      }\n      // LIMITATION:\n      // We simply record the same as get.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if 'a' in obj is handled.\n      recordUsage(this, key);\n      return key in target;\n    },\n    ownKeys(target) {\n      recordUsage(this, OWN_KEYS_SYMBOL);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (frozen) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return handler;\n};\n\n/**\n * create a proxy\n *\n * It will recursively create a proxy upon access.\n *\n * @example\n * import { createDeepProxy } from 'proxy-compare';\n *\n * const obj = ...;\n * const affected = new WeakMap();\n * const proxy = createDeepProxy(obj, affected);\n */\nexport const createDeepProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  const origObj = (\n    obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj }\n  )[GET_ORIGINAL_SYMBOL]; // unwrap proxy\n  const target = origObj || obj;\n  const frozen = isFrozen(target);\n  let proxyHandler: ProxyHandler<typeof target> | undefined = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (!proxyHandler || proxyHandler[FROZEN_PROPERTY] !== frozen) {\n    proxyHandler = createProxyHandler<T extends object ? T : never>(target, frozen);\n    proxyHandler[PROXY_PROPERTY] = new Proxy(\n      frozen ? unfreeze(target) : target,\n      proxyHandler,\n    ) as typeof target;\n    if (proxyCache) {\n      proxyCache.set(target, proxyHandler);\n    }\n  }\n  proxyHandler[AFFECTED_PROPERTY] = affected as Affected;\n  proxyHandler[PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return proxyHandler[PROXY_PROPERTY] as typeof target;\n};\n\nconst isOwnKeysChanged = (origObj: object, nextObj: object) => {\n  const origKeys = Reflect.ownKeys(origObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return origKeys.length !== nextKeys.length\n    || origKeys.some((k, i) => k !== nextKeys[i]);\n};\n\nexport const MODE_ASSUME_UNCHANGED_IF_UNAFFECTED = /*   */ 0b00001;\nexport const MODE_IGNORE_REF_EQUALITY = /*              */ 0b00010;\n\nconst IN_DEEP_SHIFT = 2;\nexport const MODE_ASSUME_UNCHANGED_IF_UNAFFECTED_IN_DEEP = (\n  MODE_ASSUME_UNCHANGED_IF_UNAFFECTED << IN_DEEP_SHIFT\n);\nexport const MODE_IGNORE_REF_EQUALITY_IN_DEEP = (\n  MODE_IGNORE_REF_EQUALITY << IN_DEEP_SHIFT\n);\n\ntype DeepChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * compare two object\n *\n * It will compare only with affected object properties\n *\n * @example\n * import { isDeepChanged } from 'proxy-compare';\n *\n * const objToCompare = ...;\n * const changed = isDeepChanged(obj, objToCompare, affected);\n */\nexport const isDeepChanged = (\n  origObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n  mode = 0,\n): boolean => {\n  if (Object.is(origObj, nextObj) && (\n    !isObject(origObj) || (mode & MODE_IGNORE_REF_EQUALITY) === 0)\n  ) {\n    return false;\n  }\n  if (!isObject(origObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(origObj);\n  if (!used) return (mode & MODE_ASSUME_UNCHANGED_IF_UNAFFECTED) === 0;\n  if (cache && (mode & MODE_IGNORE_REF_EQUALITY) === 0) {\n    const hit = (cache as DeepChangedCache).get(origObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as DeepChangedCache).set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of used) {\n    const c = key === OWN_KEYS_SYMBOL ? isOwnKeysChanged(origObj, nextObj)\n      : isDeepChanged(\n        (origObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n        ((mode >>> IN_DEEP_SHIFT) << IN_DEEP_SHIFT) | (mode >>> IN_DEEP_SHIFT),\n      );\n    if (c === true || c === false) changed = c;\n    if (changed) break;\n  }\n  if (changed === null) changed = (mode & MODE_ASSUME_UNCHANGED_IF_UNAFFECTED) === 0;\n  if (cache && (mode & MODE_IGNORE_REF_EQUALITY) === 0) {\n    cache.set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: changed,\n    });\n  }\n  return changed;\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n// get original object from proxy\nexport const getUntrackedObject = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n// mark object to track or not (even if it is not plain)\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n// convert affected to path list\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n) => {\n  const list: (string | number | symbol)[][] = [];\n  const walk = (x: unknown, path?: (string | number | symbol)[]) => {\n    const used = (affected as Affected).get(x as object);\n    if (used) {\n      used.forEach((key) => {\n        walk((x as any)[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n"],"names":["OWN_KEYS_SYMBOL","Symbol","TRACK_MEMO_SYMBOL","GET_ORIGINAL_SYMBOL","getProto","Object","getPrototypeOf","objectsToTrack","WeakMap","isObjectToTrack","obj","has","get","prototype","Array","isObject","x","createProxyHandler","origObj","frozen","trackObject","recordUsage","h","key","used","Set","set","add","handler","f","target","this","createDeepProxy","delete","ownKeys","Reflect","deleteProperty","affected","proxyCache","isFrozen","values","getOwnPropertyDescriptors","some","descriptor","writable","proxyHandler","Proxy","isArray","from","descriptors","forEach","desc","configurable","create","unfreeze","isOwnKeysChanged","nextObj","origKeys","nextKeys","length","k","i","MODE_ASSUME_UNCHANGED_IF_UNAFFECTED","MODE_IGNORE_REF_EQUALITY","MODE_ASSUME_UNCHANGED_IF_UNAFFECTED_IN_DEEP","MODE_IGNORE_REF_EQUALITY_IN_DEEP","isDeepChanged","cache","mode","is","hit","n","g","changed","c","trackMemo","getUntrackedObject","markToTrack","mark","affectedToPathList","list","walk","path","push"],"mappings":"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"}