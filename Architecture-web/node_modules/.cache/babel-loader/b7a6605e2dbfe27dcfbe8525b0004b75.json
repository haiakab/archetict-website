{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useRef, useState, useMemo, useEffect } from 'react';\nimport { AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = useRef();\n  const actualRef = root ? root : ref;\n  const [mixer] = useState(() => new AnimationMixer(undefined));\n  const api = useMemo(() => ({\n    ref: actualRef,\n    clips,\n    actions: clips.reduce((prev, clip) => _extends({}, prev, {\n      [clip.name]: null\n    }), {}),\n    names: clips.map(clip => clip.name),\n    mixer\n  }), [clips, mixer, actualRef]);\n  useFrame((state, delta) => mixer.update(delta));\n  useEffect(() => {\n    const currentRoot = actualRef.current;\n\n    if (currentRoot) {\n      clips.forEach(clip => api.actions[clip.name] = mixer.clipAction(clip, currentRoot));\n    }\n\n    return () => Object.values(api.actions).forEach(action => {\n      if (currentRoot) {\n        mixer.uncacheAction(action, currentRoot);\n      }\n    });\n  }, [api, clips, mixer, root, actualRef]);\n  return api;\n}\n\nexport { useAnimations };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/@react-three/drei/core/useAnimations.js"],"names":["_extends","useRef","useState","useMemo","useEffect","AnimationMixer","useFrame","useAnimations","clips","root","ref","actualRef","mixer","undefined","api","actions","reduce","prev","clip","name","names","map","state","delta","update","currentRoot","current","forEach","clipAction","Object","values","action","uncacheAction"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAClC,QAAMC,GAAG,GAAGT,MAAM,EAAlB;AACA,QAAMU,SAAS,GAAGF,IAAI,GAAGA,IAAH,GAAUC,GAAhC;AACA,QAAM,CAACE,KAAD,IAAUV,QAAQ,CAAC,MAAM,IAAIG,cAAJ,CAAmBQ,SAAnB,CAAP,CAAxB;AACA,QAAMC,GAAG,GAAGX,OAAO,CAAC,OAAO;AACzBO,IAAAA,GAAG,EAAEC,SADoB;AAEzBH,IAAAA,KAFyB;AAGzBO,IAAAA,OAAO,EAAEP,KAAK,CAACQ,MAAN,CAAa,CAACC,IAAD,EAAOC,IAAP,KAAgBlB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;AACvD,OAACC,IAAI,CAACC,IAAN,GAAa;AAD0C,KAAX,CAArC,EAEL,EAFK,CAHgB;AAMzBC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,GAAN,CAAUH,IAAI,IAAIA,IAAI,CAACC,IAAvB,CANkB;AAOzBP,IAAAA;AAPyB,GAAP,CAAD,EAQf,CAACJ,KAAD,EAAQI,KAAR,EAAeD,SAAf,CARe,CAAnB;AASAL,EAAAA,QAAQ,CAAC,CAACgB,KAAD,EAAQC,KAAR,KAAkBX,KAAK,CAACY,MAAN,CAAaD,KAAb,CAAnB,CAAR;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,WAAW,GAAGd,SAAS,CAACe,OAA9B;;AAEA,QAAID,WAAJ,EAAiB;AACfjB,MAAAA,KAAK,CAACmB,OAAN,CAAcT,IAAI,IAAIJ,GAAG,CAACC,OAAJ,CAAYG,IAAI,CAACC,IAAjB,IAAyBP,KAAK,CAACgB,UAAN,CAAiBV,IAAjB,EAAuBO,WAAvB,CAA/C;AACD;;AAED,WAAO,MAAMI,MAAM,CAACC,MAAP,CAAchB,GAAG,CAACC,OAAlB,EAA2BY,OAA3B,CAAmCI,MAAM,IAAI;AACxD,UAAIN,WAAJ,EAAiB;AACfb,QAAAA,KAAK,CAACoB,aAAN,CAAoBD,MAApB,EAA4BN,WAA5B;AACD;AACF,KAJY,CAAb;AAKD,GAZQ,EAYN,CAACX,GAAD,EAAMN,KAAN,EAAaI,KAAb,EAAoBH,IAApB,EAA0BE,SAA1B,CAZM,CAAT;AAaA,SAAOG,GAAP;AACD;;AAED,SAASP,aAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useRef, useState, useMemo, useEffect } from 'react';\nimport { AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = useRef();\n  const actualRef = root ? root : ref;\n  const [mixer] = useState(() => new AnimationMixer(undefined));\n  const api = useMemo(() => ({\n    ref: actualRef,\n    clips,\n    actions: clips.reduce((prev, clip) => _extends({}, prev, {\n      [clip.name]: null\n    }), {}),\n    names: clips.map(clip => clip.name),\n    mixer\n  }), [clips, mixer, actualRef]);\n  useFrame((state, delta) => mixer.update(delta));\n  useEffect(() => {\n    const currentRoot = actualRef.current;\n\n    if (currentRoot) {\n      clips.forEach(clip => api.actions[clip.name] = mixer.clipAction(clip, currentRoot));\n    }\n\n    return () => Object.values(api.actions).forEach(action => {\n      if (currentRoot) {\n        mixer.uncacheAction(action, currentRoot);\n      }\n    });\n  }, [api, clips, mixer, root, actualRef]);\n  return api;\n}\n\nexport { useAnimations };\n"]},"metadata":{},"sourceType":"module"}