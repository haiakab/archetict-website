{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useMemo, useRef, useLayoutEffect, createElement } from 'react';\nimport { Shape } from 'three';\nconst eps = 0.00001;\n\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\n\nconst RoundedBox = /*#__PURE__*/forwardRef(function RoundedBox(_ref, ref) {\n  let {\n    args: [width = 1, height = 1, depth = 1] = [],\n    radius = 0.05,\n    smoothness = 4,\n    children\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"args\", \"radius\", \"smoothness\", \"children\"]);\n\n  const shape = useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps: 1,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = useRef();\n  useLayoutEffect(() => {\n    if (geomRef.current) {\n      geomRef.current.center();\n    }\n  }, [shape, params]);\n  return /*#__PURE__*/createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/createElement(\"extrudeBufferGeometry\", {\n    attach: \"geometry\",\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\nexport { RoundedBox };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/@react-three/drei/core/RoundedBox.js"],"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useMemo","useRef","useLayoutEffect","createElement","Shape","eps","createShape","width","height","radius0","shape","radius","absarc","Math","PI","RoundedBox","_ref","ref","args","depth","smoothness","children","rest","params","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","curveSegments","geomRef","current","center","attach"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useMemo, useRef, useLayoutEffect, createElement } from 'react';\nimport { Shape } from 'three';\n\nconst eps = 0.00001;\n\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\n\nconst RoundedBox = /*#__PURE__*/forwardRef(function RoundedBox(_ref, ref) {\n  let {\n    args: [width = 1, height = 1, depth = 1] = [],\n    radius = 0.05,\n    smoothness = 4,\n    children\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"args\", \"radius\", \"smoothness\", \"children\"]);\n\n  const shape = useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps: 1,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = useRef();\n  useLayoutEffect(() => {\n    if (geomRef.current) {\n      geomRef.current.center();\n    }\n  }, [shape, params]);\n  return /*#__PURE__*/createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/createElement(\"extrudeBufferGeometry\", {\n    attach: \"geometry\",\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\n\nexport { RoundedBox };\n"]},"metadata":{},"sourceType":"module"}