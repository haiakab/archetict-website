{"ast":null,"code":"import { BufferGeometry, FileLoader, Float32BufferAttribute, Group, LineBasicMaterial, LineSegments, Loader, Material, Mesh, MeshPhongMaterial, Points, PointsMaterial, Vector3 } from '../../../build/three.module.js';\n\nvar OBJLoader = function () {\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\n\n  var material_library_pattern = /^mtllib /; // usemtl material_name\n\n  var material_use_pattern = /^usemtl /; // usemap map_name\n\n  var map_use_pattern = /^usemap /;\n  var vA = new Vector3();\n  var vB = new Vector3();\n  var vC = new Vector3();\n  var ab = new Vector3();\n  var cb = new Vector3();\n\n  function ParserState() {\n    var state = {\n      objects: [],\n      object: {},\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n      materials: {},\n      materialLibraries: [],\n      startObject: function (name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n\n        var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: [],\n            hasUVIndices: false\n          },\n          materials: [],\n          smooth: true,\n          startMaterial: function (name, libraries) {\n            var previous = this._finalize(false); // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n\n\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n              clone: function (index) {\n                var cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n            this.materials.push(material);\n            return material;\n          },\n          currentMaterial: function () {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n\n            return undefined;\n          },\n          _finalize: function (end) {\n            var lastMultiMaterial = this.currentMaterial();\n\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            } // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\n\n            if (end && this.materials.length > 1) {\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            } // Guarantee at least one empty material, this makes the creation later more straight forward.\n\n\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n\n            return lastMultiMaterial;\n          }\n        }; // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n\n        this.objects.push(this.object);\n      },\n      finalize: function () {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n      parseVertexIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseNormalIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseUVIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n      addVertex: function (a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addVertexPoint: function (a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addVertexLine: function (a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addNormal: function (a, b, c) {\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addFaceNormal: function (a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.normals;\n        vA.fromArray(src, a);\n        vB.fromArray(src, b);\n        vC.fromArray(src, c);\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        dst.push(cb.x, cb.y, cb.z);\n        dst.push(cb.x, cb.y, cb.z);\n        dst.push(cb.x, cb.y, cb.z);\n      },\n      addColor: function (a, b, c) {\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n        if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addUV: function (a, b, c) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n      addDefaultUV: function () {\n        var dst = this.object.geometry.uvs;\n        dst.push(0, 0);\n        dst.push(0, 0);\n        dst.push(0, 0);\n      },\n      addUVLine: function (a) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n      },\n      addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n        var vLen = this.vertices.length;\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n        this.addVertex(ia, ib, ic);\n        this.addColor(ia, ib, ic); // normals\n\n        if (na !== undefined && na !== '') {\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n          ib = this.parseNormalIndex(nb, nLen);\n          ic = this.parseNormalIndex(nc, nLen);\n          this.addNormal(ia, ib, ic);\n        } else {\n          this.addFaceNormal(ia, ib, ic);\n        } // uvs\n\n\n        if (ua !== undefined && ua !== '') {\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n          this.object.geometry.hasUVIndices = true;\n        } else {\n          // add placeholder values (for inconsistent face definitions)\n          this.addDefaultUV();\n        }\n      },\n      addPointGeometry: function (vertices) {\n        this.object.geometry.type = 'Points';\n        var vLen = this.vertices.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          var index = this.parseVertexIndex(vertices[vi], vLen);\n          this.addVertexPoint(index);\n          this.addColor(index);\n        }\n      },\n      addLineGeometry: function (vertices, uvs) {\n        this.object.geometry.type = 'Line';\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n\n        for (var uvi = 0, l = uvs.length; uvi < l; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n    };\n    state.startObject('', false);\n    return state;\n  } //\n\n\n  function OBJLoader(manager) {\n    Loader.call(this, manager);\n    this.materials = null;\n  }\n\n  OBJLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: OBJLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    },\n    setMaterials: function (materials) {\n      this.materials = materials;\n      return this;\n    },\n    parse: function (text) {\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n          lineFirstChar = '';\n      var lineLength = 0;\n      var result = []; // Faster to just trim left side of the line. Use if available.\n\n      var trimLeft = typeof ''.trimLeft === 'function';\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n        line = trimLeft ? line.trimLeft() : line.trim();\n        lineLength = line.length;\n        if (lineLength === 0) continue;\n        lineFirstChar = line.charAt(0); // @todo invoke passed in handler if any\n\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n\n              if (data.length >= 7) {\n                state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n              } else {\n                // if no colors are defined, add placeholders so color and vertex indices match\n                state.colors.push(undefined, undefined, undefined);\n              }\n\n              break;\n\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = []; // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\n          var v1 = faceVertices[0];\n\n          for (var j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n            var v2 = faceVertices[j];\n            var v3 = faceVertices[j + 1];\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line.substring(1).trim().split(' ');\n          var lineVertices = [],\n              lineUVs = [];\n\n          if (line.indexOf('/') === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split('/');\n              if (parts[0] !== '') lineVertices.push(parts[0]);\n              if (parts[1] !== '') lineUVs.push(parts[1]);\n            }\n          }\n\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(' ');\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (' ' + result[0].substr(1).trim()).substr(1);\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (map_use_pattern.test(line)) {\n          // the line is parsed but ignored since the loader assumes textures are defined MTL files\n          // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n          console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n        } else if (lineFirstChar === 's') {\n          result = line.split(' '); // smooth shading\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n\n      state.finalize();\n      var container = new Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n      var hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n\n      if (hasPrimitives === true) {\n        for (var i = 0, l = state.objects.length; i < l; i++) {\n          var object = state.objects[i];\n          var geometry = object.geometry;\n          var materials = object.materials;\n          var isLine = geometry.type === 'Line';\n          var isPoints = geometry.type === 'Points';\n          var hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\n\n          if (geometry.vertices.length === 0) continue;\n          var buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n\n          if (geometry.normals.length > 0) {\n            buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n          }\n\n          if (geometry.colors.length > 0) {\n            hasVertexColors = true;\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n          }\n\n          if (geometry.hasUVIndices === true) {\n            buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n          } // Create materials\n\n\n          var createdMaterials = [];\n\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            var materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n            var material = state.materials[materialHash];\n\n            if (this.materials !== null) {\n              material = this.materials.create(sourceMaterial.name); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\n              if (isLine && material && !(material instanceof LineBasicMaterial)) {\n                var materialLine = new LineBasicMaterial();\n                Material.prototype.copy.call(materialLine, material);\n                materialLine.color.copy(material.color);\n                material = materialLine;\n              } else if (isPoints && material && !(material instanceof PointsMaterial)) {\n                var materialPoints = new PointsMaterial({\n                  size: 10,\n                  sizeAttenuation: false\n                });\n                Material.prototype.copy.call(materialPoints, material);\n                materialPoints.color.copy(material.color);\n                materialPoints.map = material.map;\n                material = materialPoints;\n              }\n            }\n\n            if (material === undefined) {\n              if (isLine) {\n                material = new LineBasicMaterial();\n              } else if (isPoints) {\n                material = new PointsMaterial({\n                  size: 1,\n                  sizeAttenuation: false\n                });\n              } else {\n                material = new MeshPhongMaterial();\n              }\n\n              material.name = sourceMaterial.name;\n              material.flatShading = sourceMaterial.smooth ? false : true;\n              material.vertexColors = hasVertexColors;\n              state.materials[materialHash] = material;\n            }\n\n            createdMaterials.push(material);\n          } // Create mesh\n\n\n          var mesh;\n\n          if (createdMaterials.length > 1) {\n            for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n              var sourceMaterial = materials[mi];\n              buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n            }\n\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials);\n            }\n          } else {\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials[0]);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials[0]);\n            }\n          }\n\n          mesh.name = object.name;\n          container.add(mesh);\n        }\n      } else {\n        // if there is only the default parser state object with no geometry data, interpret data as point cloud\n        if (state.vertices.length > 0) {\n          var material = new PointsMaterial({\n            size: 1,\n            sizeAttenuation: false\n          });\n          var buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n\n          if (state.colors.length > 0 && state.colors[0] !== undefined) {\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n            material.vertexColors = true;\n          }\n\n          var points = new Points(buffergeometry, material);\n          container.add(points);\n        }\n      }\n\n      return container;\n    }\n  });\n  return OBJLoader;\n}();\n\nexport { OBJLoader };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/three/examples/jsm/loaders/OBJLoader.js"],"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Group","LineBasicMaterial","LineSegments","Loader","Material","Mesh","MeshPhongMaterial","Points","PointsMaterial","Vector3","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","map_use_pattern","vA","vB","vC","ab","cb","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","materialLine","copy","color","materialPoints","size","sizeAttenuation","map","flatShading","vertexColors","mesh","addGroup","add","points"],"mappings":"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","sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3\n} from '../../../build/three.module.js';\n\nvar OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\t// usemap map_name\n\tvar map_use_pattern = /^usemap /;\n\n\tvar vA = new Vector3();\n\tvar vB = new Vector3();\n\tvar vC = new Vector3();\n\n\tvar ab = new Vector3();\n\tvar cb = new Vector3();\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterials: {},\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: [],\n\t\t\t\t\t\thasUVIndices: false\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tvA.fromArray( src, a );\n\t\t\t\tvB.fromArray( src, b );\n\t\t\t\tvC.fromArray( src, c );\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddDefaultUV: function () {\n\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( 0, 0 );\n\t\t\t\tdst.push( 0, 0 );\n\t\t\t\tdst.push( 0, 0 );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\tvar nLen = this.normals.length;\n\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\t// uvs\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\t\tthis.addDefaultUV();\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tvar index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\t\tthis.addColor( index );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( ' ' );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( ' ' + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( map_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tvar hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\t\tif ( hasPrimitives === true ) {\n\n\t\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\t\tvar geometry = object.geometry;\n\t\t\t\t\tvar materials = object.materials;\n\t\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\t\tvar buffergeometry = new BufferGeometry();\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create materials\n\n\t\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tvar materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\t\tvar material = state.materials[ materialHash ];\n\n\t\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\t\tvar materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\t\tvar materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = object.name;\n\n\t\t\t\t\tcontainer.add( mesh );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\t\tvar material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\tvar buffergeometry = new BufferGeometry();\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar points = new Points( buffergeometry, material );\n\t\t\t\t\tcontainer.add( points );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn container;\n\n\t\t}\n\n\t} );\n\n\treturn OBJLoader;\n\n} )();\n\nexport { OBJLoader };\n"]},"metadata":{},"sourceType":"module"}