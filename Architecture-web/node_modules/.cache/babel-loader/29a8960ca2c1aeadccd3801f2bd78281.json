{"ast":null,"code":"import { Blob } from 'blob-polyfill';\n\nfunction fixBinary(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return buf;\n} // polyfill for SSR as atob is not available - https://gist.github.com/jmshal/b14199f7402c8f3a4568733d8bed0f25\n\n\nconst atobPolyfill = a => typeof window === 'undefined' ? Buffer.from(a, 'base64').toString('binary') : atob(a);\n\nconst createImageUrl = (blob, type) => URL.createObjectURL(new Blob([fixBinary(atobPolyfill(blob))], {\n  type\n}));\n\nexport { createImageUrl };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/@react-three/drei/helpers/base64.js"],"names":["Blob","fixBinary","bin","length","buf","ArrayBuffer","arr","Uint8Array","i","charCodeAt","atobPolyfill","a","window","Buffer","from","toString","atob","createImageUrl","blob","type","URL","createObjectURL"],"mappings":"AAAA,SAASA,IAAT,QAAqB,eAArB;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIC,MAAM,GAAGD,GAAG,CAACC,MAAjB;AACA,MAAIC,GAAG,GAAG,IAAIC,WAAJ,CAAgBF,MAAhB,CAAV;AACA,MAAIG,GAAG,GAAG,IAAIC,UAAJ,CAAeH,GAAf,CAAV;;AAEA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAApB,EAA4BK,CAAC,EAA7B,EAAiC;AAC/BF,IAAAA,GAAG,CAACE,CAAD,CAAH,GAASN,GAAG,CAACO,UAAJ,CAAeD,CAAf,CAAT;AACD;;AAED,SAAOJ,GAAP;AACD,C,CAAC;;;AAGF,MAAMM,YAAY,GAAGC,CAAC,IAAI,OAAOC,MAAP,KAAkB,WAAlB,GAAgCC,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAe,QAAf,EAAyBI,QAAzB,CAAkC,QAAlC,CAAhC,GAA8EC,IAAI,CAACL,CAAD,CAA5G;;AAEA,MAAMM,cAAc,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgBC,GAAG,CAACC,eAAJ,CAAoB,IAAIrB,IAAJ,CAAS,CAACC,SAAS,CAACS,YAAY,CAACQ,IAAD,CAAb,CAAV,CAAT,EAA0C;AACnGC,EAAAA;AADmG,CAA1C,CAApB,CAAvC;;AAIA,SAASF,cAAT","sourcesContent":["import { Blob } from 'blob-polyfill';\n\nfunction fixBinary(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return buf;\n} // polyfill for SSR as atob is not available - https://gist.github.com/jmshal/b14199f7402c8f3a4568733d8bed0f25\n\n\nconst atobPolyfill = a => typeof window === 'undefined' ? Buffer.from(a, 'base64').toString('binary') : atob(a);\n\nconst createImageUrl = (blob, type) => URL.createObjectURL(new Blob([fixBinary(atobPolyfill(blob))], {\n  type\n}));\n\nexport { createImageUrl };\n"]},"metadata":{},"sourceType":"module"}