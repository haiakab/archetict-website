{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, createElement } from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n\n    _defineProperty(this, \"_time\", void 0);\n\n    _defineProperty(this, \"_distort\", void 0);\n\n    _defineProperty(this, \"_radius\", void 0);\n\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    speed = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  const [material] = useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshDistortMaterial };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/@react-three/drei/core/MeshDistortMaterial.js"],"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useState","createElement","MeshPhysicalMaterial","useFrame","_defineProperty","distort","DistortMaterialImpl","constructor","parameters","setValues","_time","value","_distort","_radius","onBeforeCompile","shader","uniforms","time","radius","vertexShader","replace","v","MeshDistortMaterial","_ref","ref","speed","props","material","state","clock","getElapsedTime","dispose","undefined","object","attach"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, createElement } from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n\n    _defineProperty(this, \"_time\", void 0);\n\n    _defineProperty(this, \"_distort\", void 0);\n\n    _defineProperty(this, \"_radius\", void 0);\n\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    speed = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  const [material] = useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n"]},"metadata":{},"sourceType":"module"}