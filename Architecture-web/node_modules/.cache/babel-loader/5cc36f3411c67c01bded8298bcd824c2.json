{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, Color, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry } from 'three';\n\nclass TransformControls extends Object3D {\n  // events\n  constructor(camera, domElement) {\n    super();\n\n    _defineProperty(this, \"isTransformControls\", true);\n\n    _defineProperty(this, \"visible\", false);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"raycaster\", new Raycaster());\n\n    _defineProperty(this, \"_gizmo\", void 0);\n\n    _defineProperty(this, \"_plane\", void 0);\n\n    _defineProperty(this, \"_tempVector\", new Vector3());\n\n    _defineProperty(this, \"_tempVector2\", new Vector3());\n\n    _defineProperty(this, \"_tempQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n\n    _defineProperty(this, \"_pointStart\", new Vector3());\n\n    _defineProperty(this, \"_pointEnd\", new Vector3());\n\n    _defineProperty(this, \"_offset\", new Vector3());\n\n    _defineProperty(this, \"_rotationAxis\", new Vector3());\n\n    _defineProperty(this, \"_startNorm\", new Vector3());\n\n    _defineProperty(this, \"_endNorm\", new Vector3());\n\n    _defineProperty(this, \"_rotationAngle\", 0);\n\n    _defineProperty(this, \"_cameraPosition\", new Vector3());\n\n    _defineProperty(this, \"_cameraQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_cameraScale\", new Vector3());\n\n    _defineProperty(this, \"_parentPosition\", new Vector3());\n\n    _defineProperty(this, \"_parentQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_parentQuaternionInv\", new Quaternion());\n\n    _defineProperty(this, \"_parentScale\", new Vector3());\n\n    _defineProperty(this, \"_worldPositionStart\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"_worldScaleStart\", new Vector3());\n\n    _defineProperty(this, \"_worldPosition\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_worldQuaternionInv\", new Quaternion());\n\n    _defineProperty(this, \"_worldScale\", new Vector3());\n\n    _defineProperty(this, \"_eye\", new Vector3());\n\n    _defineProperty(this, \"_positionStart\", new Vector3());\n\n    _defineProperty(this, \"_quaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"_scaleStart\", new Vector3());\n\n    _defineProperty(this, \"_camera\", void 0);\n\n    _defineProperty(this, \"_object\", void 0);\n\n    _defineProperty(this, \"_enabled\", true);\n\n    _defineProperty(this, \"_axis\", null);\n\n    _defineProperty(this, \"_mode\", 'translate');\n\n    _defineProperty(this, \"_translationSnap\", null);\n\n    _defineProperty(this, \"_rotationSnap\", null);\n\n    _defineProperty(this, \"_scaleSnap\", null);\n\n    _defineProperty(this, \"_space\", 'world');\n\n    _defineProperty(this, \"_size\", 1);\n\n    _defineProperty(this, \"_dragging\", false);\n\n    _defineProperty(this, \"_showX\", true);\n\n    _defineProperty(this, \"_showY\", true);\n\n    _defineProperty(this, \"_showZ\", true);\n\n    _defineProperty(this, \"changeEvent\", {\n      type: 'change'\n    });\n\n    _defineProperty(this, \"mouseDownEvent\", {\n      type: 'mouseDown'\n    });\n\n    _defineProperty(this, \"mouseUpEvent\", {\n      type: 'mouseUp',\n      mode: this._mode\n    });\n\n    _defineProperty(this, \"objectChangeEvent\", {\n      type: 'objectChange'\n    });\n\n    _defineProperty(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n\n      return false;\n    });\n\n    _defineProperty(this, \"attach\", object => {\n      this._object = object;\n      this.visible = true;\n      return this;\n    });\n\n    _defineProperty(this, \"detach\", () => {\n      this._object = undefined;\n      this.visible = false;\n      this._axis = null;\n      return this;\n    });\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      if (this._object !== undefined) {\n        this._object.updateMatrixWorld();\n\n        if (this._object.parent === null) {\n          console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n        } else {\n          this._object.parent.matrixWorld.decompose(this._parentPosition, this._parentQuaternion, this._parentScale);\n        }\n\n        this._object.matrixWorld.decompose(this._worldPosition, this._worldQuaternion, this._worldScale);\n\n        this._parentQuaternionInv.copy(this._parentQuaternion).invert();\n\n        this._worldQuaternionInv.copy(this._worldQuaternion).invert();\n      }\n\n      this._camera.updateMatrixWorld();\n\n      this._camera.matrixWorld.decompose(this._cameraPosition, this._cameraQuaternion, this._cameraScale);\n\n      this._eye.copy(this._cameraPosition).sub(this._worldPosition).normalize();\n\n      super.updateMatrixWorld();\n    });\n\n    _defineProperty(this, \"pointerHover\", pointer => {\n      if (this._object === undefined || this._dragging === true) return;\n      this.raycaster.setFromCamera(pointer, this._camera);\n      const intersect = this.intersectObjectWithRay(this._gizmo.picker[this._mode], this.raycaster);\n\n      if (intersect) {\n        this._axis = intersect.object.name;\n      } else {\n        this._axis = null;\n      }\n    });\n\n    _defineProperty(this, \"pointerDown\", pointer => {\n      if (this._object === undefined || this._dragging === true || pointer.button !== 0) return;\n\n      if (this._axis !== null) {\n        this.raycaster.setFromCamera(pointer, this._camera);\n        const planeIntersect = this.intersectObjectWithRay(this._plane, this.raycaster, true);\n\n        if (planeIntersect) {\n          let space = this._space;\n\n          if (this._mode === 'scale') {\n            space = 'local';\n          } else if (this._axis === 'E' || this._axis === 'XYZE' || this._axis === 'XYZ') {\n            space = 'world';\n          }\n\n          if (space === 'local' && this._mode === 'rotate') {\n            const snap = this._rotationSnap;\n            if (this._axis === 'X' && snap) this._object.rotation.x = Math.round(this._object.rotation.x / snap) * snap;\n            if (this._axis === 'Y' && snap) this._object.rotation.y = Math.round(this._object.rotation.y / snap) * snap;\n            if (this._axis === 'Z' && snap) this._object.rotation.z = Math.round(this._object.rotation.z / snap) * snap;\n          }\n\n          this._object.updateMatrixWorld();\n\n          if (this._object.parent) {\n            this._object.parent.updateMatrixWorld();\n          }\n\n          this._positionStart.copy(this._object.position);\n\n          this._quaternionStart.copy(this._object.quaternion);\n\n          this._scaleStart.copy(this._object.scale);\n\n          this._object.matrixWorld.decompose(this._worldPositionStart, this._worldQuaternionStart, this._worldScaleStart);\n\n          this._pointStart.copy(planeIntersect.point).sub(this._worldPositionStart);\n        }\n\n        this._dragging = true;\n        this.mouseDownEvent.type = this._mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n\n    _defineProperty(this, \"pointerMove\", pointer => {\n      const axis = this._axis;\n      const mode = this._mode;\n      const object = this._object;\n      let space = this._space;\n\n      if (mode === 'scale') {\n        space = 'local';\n      } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n        space = 'world';\n      }\n\n      if (object === undefined || axis === null || this._dragging === false || pointer.button !== -1) return;\n      this.raycaster.setFromCamera(pointer, this._camera);\n      const planeIntersect = this.intersectObjectWithRay(this._plane, this.raycaster, true);\n      if (!planeIntersect) return;\n\n      this._pointEnd.copy(planeIntersect.point).sub(this._worldPositionStart);\n\n      if (mode === 'translate') {\n        // Apply translate\n        this._offset.copy(this._pointEnd).sub(this._pointStart);\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this._offset.applyQuaternion(this._worldQuaternionInv);\n        }\n\n        if (axis.indexOf('X') === -1) this._offset.x = 0;\n        if (axis.indexOf('Y') === -1) this._offset.y = 0;\n        if (axis.indexOf('Z') === -1) this._offset.z = 0;\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale);\n        } else {\n          this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale);\n        }\n\n        object.position.copy(this._offset).add(this._positionStart); // Apply translation snap\n\n        if (this._translationSnap) {\n          if (space === 'local') {\n            object.position.applyQuaternion(this._tempQuaternion.copy(this._quaternionStart).invert());\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this._translationSnap) * this._translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this._translationSnap) * this._translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this._translationSnap) * this._translationSnap;\n            }\n\n            object.position.applyQuaternion(this._quaternionStart);\n          }\n\n          if (space === 'world') {\n            if (object.parent) {\n              object.position.add(this._tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this._translationSnap) * this._translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this._translationSnap) * this._translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this._translationSnap) * this._translationSnap;\n            }\n\n            if (object.parent) {\n              object.position.sub(this._tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === 'scale') {\n        if (axis.search('XYZ') !== -1) {\n          let d = this._pointEnd.length() / this._pointStart.length();\n\n          if (this._pointEnd.dot(this._pointStart) < 0) d *= -1;\n\n          this._tempVector2.set(d, d, d);\n        } else {\n          this._tempVector.copy(this._pointStart);\n\n          this._tempVector2.copy(this._pointEnd);\n\n          this._tempVector.applyQuaternion(this._worldQuaternionInv);\n\n          this._tempVector2.applyQuaternion(this._worldQuaternionInv);\n\n          this._tempVector2.divide(this._tempVector);\n\n          if (axis.search('X') === -1) {\n            this._tempVector2.x = 1;\n          }\n\n          if (axis.search('Y') === -1) {\n            this._tempVector2.y = 1;\n          }\n\n          if (axis.search('Z') === -1) {\n            this._tempVector2.z = 1;\n          }\n        } // Apply scale\n\n\n        object.scale.copy(this._scaleStart).multiply(this._tempVector2);\n\n        if (this._scaleSnap && this._object) {\n          if (axis.search('X') !== -1) {\n            this._object.scale.x = Math.round(object.scale.x / this._scaleSnap) * this._scaleSnap || this._scaleSnap;\n          }\n\n          if (axis.search('Y') !== -1) {\n            object.scale.y = Math.round(object.scale.y / this._scaleSnap) * this._scaleSnap || this._scaleSnap;\n          }\n\n          if (axis.search('Z') !== -1) {\n            object.scale.z = Math.round(object.scale.z / this._scaleSnap) * this._scaleSnap || this._scaleSnap;\n          }\n        }\n      } else if (mode === 'rotate') {\n        this._offset.copy(this._pointEnd).sub(this._pointStart);\n\n        const ROTATION_SPEED = 20 / this._worldPosition.distanceTo(this._tempVector.setFromMatrixPosition(this._camera.matrixWorld));\n\n        if (axis === 'E') {\n          this._rotationAxis.copy(this._eye);\n\n          this._rotationAngle = this._pointEnd.angleTo(this._pointStart);\n\n          this._startNorm.copy(this._pointStart).normalize();\n\n          this._endNorm.copy(this._pointEnd).normalize();\n\n          this._rotationAngle *= this._endNorm.cross(this._startNorm).dot(this._eye) < 0 ? 1 : -1;\n        } else if (axis === 'XYZE') {\n          this._rotationAxis.copy(this._offset).cross(this._eye).normalize();\n\n          this._rotationAngle = this._offset.dot(this._tempVector.copy(this._rotationAxis).cross(this._eye)) * ROTATION_SPEED;\n        } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n          this._rotationAxis.copy(this._unit[axis]);\n\n          this._tempVector.copy(this._unit[axis]);\n\n          if (space === 'local') {\n            this._tempVector.applyQuaternion(this._worldQuaternion);\n          }\n\n          this._rotationAngle = this._offset.dot(this._tempVector.cross(this._eye).normalize()) * ROTATION_SPEED;\n        } // Apply rotation snap\n\n\n        if (this._rotationSnap) {\n          this._rotationAngle = Math.round(this._rotationAngle / this._rotationSnap) * this._rotationSnap;\n        } // Apply rotate\n\n\n        if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n          object.quaternion.copy(this._quaternionStart);\n          object.quaternion.multiply(this._tempQuaternion.setFromAxisAngle(this._rotationAxis, this._rotationAngle)).normalize();\n        } else {\n          this._rotationAxis.applyQuaternion(this._parentQuaternionInv);\n\n          object.quaternion.copy(this._tempQuaternion.setFromAxisAngle(this._rotationAxis, this._rotationAngle));\n          object.quaternion.multiply(this._quaternionStart).normalize();\n        }\n      }\n\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n\n    _defineProperty(this, \"pointerUp\", pointer => {\n      if (pointer.button !== 0) return;\n\n      if (this._dragging && this._axis !== null) {\n        this.mouseUpEvent.mode = this._mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n\n      this._dragging = false;\n      this._axis = null;\n    });\n\n    _defineProperty(this, \"getPointer\", event => {\n      var _this$domElement$owne;\n\n      if (this.domElement && (_this$domElement$owne = this.domElement.ownerDocument) !== null && _this$domElement$owne !== void 0 && _this$domElement$owne.pointerLockElement) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        var _this$domElement;\n\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_this$domElement = this.domElement) === null || _this$domElement === void 0 ? void 0 : _this$domElement.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n\n    _defineProperty(this, \"onPointerHover\", event => {\n      if (!this._enabled) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n\n    _defineProperty(this, \"onPointerDown\", event => {\n      var _this$domElement$owne2;\n\n      if (!this._enabled) return;\n      this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n      (_this$domElement$owne2 = this.domElement.ownerDocument) === null || _this$domElement$owne2 === void 0 ? void 0 : _this$domElement$owne2.addEventListener('pointermove', this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"onPointerMove\", event => {\n      if (!this._enabled) return;\n      this.pointerMove(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"onPointerUp\", event => {\n      var _this$domElement$owne3;\n\n      if (!this._enabled) return;\n      this.domElement.style.touchAction = '';\n      (_this$domElement$owne3 = this.domElement.ownerDocument) === null || _this$domElement$owne3 === void 0 ? void 0 : _this$domElement$owne3.removeEventListener('pointermove', this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"getMode\", () => this._mode);\n\n    _defineProperty(this, \"setMode\", mode => {\n      this._mode = mode;\n    });\n\n    _defineProperty(this, \"setTranslationSnap\", translationSnap => {\n      this._translationSnap = translationSnap;\n    });\n\n    _defineProperty(this, \"setRotationSnap\", rotationSnap => {\n      this._rotationSnap = rotationSnap;\n    });\n\n    _defineProperty(this, \"setScaleSnap\", scaleSnap => {\n      this._scaleSnap = scaleSnap;\n    });\n\n    _defineProperty(this, \"setSize\", size => {\n      this._size = size;\n    });\n\n    _defineProperty(this, \"setSpace\", space => {\n      this._space = space;\n    });\n\n    _defineProperty(this, \"update\", () => {\n      console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n    });\n\n    _defineProperty(this, \"dispose\", () => {\n      var _this$domElement$owne4, _this$domElement$owne5;\n\n      this.domElement.removeEventListener('pointerdown', this.onPointerDown);\n      this.domElement.removeEventListener('pointermove', this.onPointerHover);\n      (_this$domElement$owne4 = this.domElement.ownerDocument) === null || _this$domElement$owne4 === void 0 ? void 0 : _this$domElement$owne4.removeEventListener('pointermove', this.onPointerMove);\n      (_this$domElement$owne5 = this.domElement.ownerDocument) === null || _this$domElement$owne5 === void 0 ? void 0 : _this$domElement$owne5.removeEventListener('pointerup', this.onPointerUp);\n      this.traverse(child => {\n        const mesh = child;\n\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n\n    if (domElement === undefined) {\n      console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n      this.domElement = document;\n    }\n\n    this.domElement = domElement;\n    this._camera = camera;\n    this._gizmo = new TransformControlsGizmo();\n    this.add(this._gizmo);\n    this._plane = new TransformControlsPlane();\n    this.add(this._plane); // Defined getter, setter and store for a property\n\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function () {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            this._plane[propName] = value;\n            this._gizmo[propName] = value;\n            this.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      }); //@ts-ignore\n\n      this[propName] = defaultValue; // @ts-ignore\n\n      this._plane[propName] = defaultValue; // @ts-ignore\n\n      this._gizmo[propName] = defaultValue;\n    };\n\n    defineProperty('_camera', this._camera);\n    defineProperty('_object', this._object);\n    defineProperty('_enabled', this._enabled);\n    defineProperty('_axis', this._axis);\n    defineProperty('_mode', this._mode);\n    defineProperty('_translationSnap', this._translationSnap);\n    defineProperty('_rotationSnap', this._rotationSnap);\n    defineProperty('_scaleSnap', this._scaleSnap);\n    defineProperty('_space', this._space);\n    defineProperty('_size', this._size);\n    defineProperty('_dragging', this._dragging);\n    defineProperty('_showX', this._showX);\n    defineProperty('_showY', this._showY);\n    defineProperty('_showZ', this._showZ);\n    defineProperty('_worldPosition', this._worldPosition);\n    defineProperty('_worldPositionStart', this._worldPositionStart);\n    defineProperty('_worldQuaternion', this._worldQuaternion);\n    defineProperty('_worldQuaternionStart', this._worldQuaternionStart);\n    defineProperty('_cameraPosition', this._cameraPosition);\n    defineProperty('_cameraQuaternion', this._cameraQuaternion);\n    defineProperty('_pointStart', this._pointStart);\n    defineProperty('_pointEnd', this._pointEnd);\n    defineProperty('_rotationAxis', this._rotationAxis);\n    defineProperty('_rotationAngle', this._rotationAngle);\n    defineProperty('_eye', this._eye);\n    {\n      domElement.addEventListener('pointerdown', this.onPointerDown);\n      domElement.addEventListener('pointermove', this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp);\n    }\n  }\n\n}\n\nclass TransformControlsGizmo extends Object3D {\n  // these are set from parent class TransformControls\n  constructor() {\n    super();\n\n    _defineProperty(this, \"isTransformControlsGizmo\", true);\n\n    _defineProperty(this, \"type\", 'TransformControlsGizmo');\n\n    _defineProperty(this, \"tempVector\", new Vector3(0, 0, 0));\n\n    _defineProperty(this, \"tempEuler\", new Euler());\n\n    _defineProperty(this, \"alignVector\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"zeroVector\", new Vector3(0, 0, 0));\n\n    _defineProperty(this, \"lookAtMatrix\", new Matrix4());\n\n    _defineProperty(this, \"tempQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"tempQuaternion2\", new Quaternion());\n\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"gizmo\", void 0);\n\n    _defineProperty(this, \"picker\", void 0);\n\n    _defineProperty(this, \"helper\", void 0);\n\n    _defineProperty(this, \"_rotationAxis\", new Vector3());\n\n    _defineProperty(this, \"_cameraPosition\", new Vector3());\n\n    _defineProperty(this, \"_worldPositionStart\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"_worldPosition\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_eye\", new Vector3());\n\n    _defineProperty(this, \"_camera\", null);\n\n    _defineProperty(this, \"_enabled\", true);\n\n    _defineProperty(this, \"_axis\", null);\n\n    _defineProperty(this, \"_mode\", 'translate');\n\n    _defineProperty(this, \"_space\", 'world');\n\n    _defineProperty(this, \"_size\", 1);\n\n    _defineProperty(this, \"_dragging\", false);\n\n    _defineProperty(this, \"_showX\", true);\n\n    _defineProperty(this, \"_showY\", true);\n\n    _defineProperty(this, \"_showZ\", true);\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this._space;\n\n      if (this._mode === 'scale') {\n        space = 'local'; // scale always oriented to local rotation\n      }\n\n      const quaternion = space === 'local' ? this._worldQuaternion : this.identityQuaternion; // Show only gizmos for current transform mode\n\n      this.gizmo['translate'].visible = this._mode === 'translate';\n      this.gizmo['rotate'].visible = this._mode === 'rotate';\n      this.gizmo['scale'].visible = this._mode === 'scale';\n      this.helper['translate'].visible = this._mode === 'translate';\n      this.helper['rotate'].visible = this._mode === 'rotate';\n      this.helper['scale'].visible = this._mode === 'scale';\n      let handles = [];\n      handles = handles.concat(this.picker[this._mode].children);\n      handles = handles.concat(this.gizmo[this._mode].children);\n      handles = handles.concat(this.helper[this._mode].children);\n\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i]; // hide aligned to camera\n\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this._worldPosition);\n        let factor;\n\n        if (this._camera.isOrthographicCamera) {\n          factor = (this._camera.top - this._camera.bottom) / this._camera.zoom;\n        } else {\n          factor = this._worldPosition.distanceTo(this._cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this._camera.fov / 360) / this._camera.zoom, 7);\n        }\n\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this._size / 7); // TODO: simplify helpers and consider decoupling from gizmo\n\n        if (handle.tag === 'helper') {\n          handle.visible = false;\n\n          if (handle.name === 'AXIS') {\n            handle.position.copy(this._worldPositionStart);\n            handle.visible = !!this._axis;\n\n            if (this._axis === 'X') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this._eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this._axis === 'Y') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this._eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this._axis === 'Z') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this._eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this._axis === 'XYZE') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this._rotationAxis);\n              handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY));\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this._dragging;\n            }\n\n            if (this._axis === 'E') {\n              handle.visible = false;\n            }\n          } else if (handle.name === 'START') {\n            handle.position.copy(this._worldPositionStart);\n            handle.visible = this._dragging;\n          } else if (handle.name === 'END') {\n            handle.position.copy(this._worldPosition);\n            handle.visible = this._dragging;\n          } else if (handle.name === 'DELTA') {\n            handle.position.copy(this._worldPositionStart);\n            handle.quaternion.copy(this._worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this._worldPositionStart).sub(this._worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this._worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this._dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n\n            if (this._dragging) {\n              handle.position.copy(this._worldPositionStart);\n            } else {\n              handle.position.copy(this._worldPosition);\n            }\n\n            if (this._axis) {\n              handle.visible = this._axis.search(handle.name) !== -1;\n            }\n          } // If updating helper, skip rest of the loop\n\n\n          continue;\n        } // Align handles to current local or world rotation\n\n\n        handle.quaternion.copy(quaternion);\n\n        if (this._mode === 'translate' || this._mode === 'scale') {\n          // Hide translate and scale axis facing the camera\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0.0;\n\n          if (handle.name === 'X' || handle.name === 'XYZX') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this._eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Y' || handle.name === 'XYZY') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this._eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Z' || handle.name === 'XYZZ') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this._eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XY') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this._eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'YZ') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this._eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XZ') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this._eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          } // Flip translate and scale axis ocluded behind another axis\n\n\n          if (handle.name.search('X') !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this._eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search('Y') !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this._eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search('Z') !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this._eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n        } else if (this._mode === 'rotate') {\n          // Align handles to current local or world rotation\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this._eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n\n          if (handle.name.search('E') !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this._eye, this.zeroVector, this.unitY));\n          }\n\n          if (handle.name === 'X') {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === 'Y') {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === 'Z') {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        } // Hide disabled axes\n\n\n        handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || this._showX);\n        handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || this._showY);\n        handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || this._showZ);\n        handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || this._showX && this._showY && this._showZ); // highlight selected axis\n        //@ts-ignore\n\n        handle.material._opacity = handle.material._opacity || handle.material.opacity; //@ts-ignore\n\n        handle.material._color = handle.material._color || handle.material.color.clone(); //@ts-ignore\n\n        handle.material.color.copy(handle.material._color); //@ts-ignore\n\n        handle.material.opacity = handle.material._opacity;\n\n        if (!this._enabled) {\n          //@ts-ignore\n          handle.material.opacity *= 0.5; //@ts-ignore\n\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this._axis) {\n          if (handle.name === this._axis) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this._axis.split('').some(function (a) {\n            return handle.name === a;\n          })) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            //@ts-ignore\n            handle.material.opacity *= 0.25; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n\n      super.updateMatrixWorld();\n    });\n\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    }); // Make unique material for each axis/color\n\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(0xff0000);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(0x00ff00);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(0x0000ff);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(0xffff00);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(0x00ffff);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(0xff00ff);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(0xffff00);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(0xff0000);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(0x00ff00);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(0x0000ff);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(0x00ffff);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(0xff00ff);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(0xffff00);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(0x787878);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25; // reusable geometry\n\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    }; // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }; // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, 'fwd'], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, 'bwd'], [new Line(lineGeometry, matLineRed)]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, 'fwd'], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, 'fwd'], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [[new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    const gizmoRotate = {\n      X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n      Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n      Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n      E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 0.001]]],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n      XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    }; // Creates an Object3D with gizmos described in custom hierarchy definition.\n    // this is nearly impossible to Type so i'm leaving it\n\n    const setupGizmo = gizmoMap => {\n      const gizmo = new Object3D();\n\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4]; // name and tag properties are essential for picking and updating logic.\n\n          object.name = name; // @ts-ignore\n\n          object.tag = tag;\n\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n\n      return gizmo;\n    };\n\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo['translate'] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo['rotate'] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo['scale'] = setupGizmo(gizmoScale));\n    this.add(this.picker['translate'] = setupGizmo(pickerTranslate));\n    this.add(this.picker['rotate'] = setupGizmo(pickerRotate));\n    this.add(this.picker['scale'] = setupGizmo(pickerScale));\n    this.add(this.helper['translate'] = setupGizmo(helperTranslate));\n    this.add(this.helper['rotate'] = setupGizmo(helperRotate));\n    this.add(this.helper['scale'] = setupGizmo(helperScale)); // Pickers should be hidden always\n\n    this.picker['translate'].visible = false;\n    this.picker['rotate'].visible = false;\n    this.picker['scale'].visible = false;\n  } // updateMatrixWorld will update transformations and appearance of individual handles\n\n\n}\n\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n\n    _defineProperty(this, \"isTransformControlsPlane\", true);\n\n    _defineProperty(this, \"type\", 'TransformControlsPlane');\n\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"tempVector\", new Vector3());\n\n    _defineProperty(this, \"dirVector\", new Vector3());\n\n    _defineProperty(this, \"alignVector\", new Vector3());\n\n    _defineProperty(this, \"tempMatrix\", new Matrix4());\n\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_cameraQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_worldPosition\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_eye\", new Vector3());\n\n    _defineProperty(this, \"_axis\", null);\n\n    _defineProperty(this, \"_mode\", 'translate');\n\n    _defineProperty(this, \"_space\", 'world');\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this._space;\n      this.position.copy(this._worldPosition);\n      if (this._mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n      this.unitX.set(1, 0, 0).applyQuaternion(space === 'local' ? this._worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === 'local' ? this._worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === 'local' ? this._worldQuaternion : this.identityQuaternion); // Align the plane for current transform mode, axis and space.\n\n      this.alignVector.copy(this.unitY);\n\n      switch (this._mode) {\n        case 'translate':\n        case 'scale':\n          switch (this._axis) {\n            case 'X':\n              this.alignVector.copy(this._eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n\n            case 'Y':\n              this.alignVector.copy(this._eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n\n            case 'Z':\n              this.alignVector.copy(this._eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n\n            case 'XY':\n              this.dirVector.copy(this.unitZ);\n              break;\n\n            case 'YZ':\n              this.dirVector.copy(this.unitX);\n              break;\n\n            case 'XZ':\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n\n            case 'XYZ':\n            case 'E':\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n\n          break;\n\n        case 'rotate':\n        default:\n          // special case for rotate\n          this.dirVector.set(0, 0, 0);\n      }\n\n      if (this.dirVector.length() === 0) {\n        // If in rotate mode, make the plane parallel to camera\n        this.quaternion.copy(this._cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n\n      super.updateMatrixWorld();\n    });\n  }\n\n}\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/three-stdlib/controls/TransformControls.js"],"names":["_defineProperty","Object3D","Raycaster","Vector3","Quaternion","Euler","Matrix4","Color","MeshBasicMaterial","DoubleSide","LineBasicMaterial","CylinderGeometry","BoxGeometry","BufferGeometry","Float32BufferAttribute","Mesh","Line","OctahedronGeometry","PlaneGeometry","TorusGeometry","SphereGeometry","TransformControls","constructor","camera","domElement","X","Y","Z","type","mode","_mode","object","raycaster","includeInvisible","allIntersections","intersectObject","i","length","visible","_object","undefined","_axis","updateMatrixWorld","parent","console","error","matrixWorld","decompose","_parentPosition","_parentQuaternion","_parentScale","_worldPosition","_worldQuaternion","_worldScale","_parentQuaternionInv","copy","invert","_worldQuaternionInv","_camera","_cameraPosition","_cameraQuaternion","_cameraScale","_eye","sub","normalize","pointer","_dragging","setFromCamera","intersect","intersectObjectWithRay","_gizmo","picker","name","button","planeIntersect","_plane","space","_space","snap","_rotationSnap","rotation","x","Math","round","y","z","_positionStart","position","_quaternionStart","quaternion","_scaleStart","scale","_worldPositionStart","_worldQuaternionStart","_worldScaleStart","_pointStart","point","mouseDownEvent","dispatchEvent","axis","_pointEnd","_offset","applyQuaternion","indexOf","divide","add","_translationSnap","_tempQuaternion","search","_tempVector","setFromMatrixPosition","d","dot","_tempVector2","set","multiply","_scaleSnap","ROTATION_SPEED","distanceTo","_rotationAxis","_rotationAngle","angleTo","_startNorm","_endNorm","cross","_unit","setFromAxisAngle","changeEvent","objectChangeEvent","mouseUpEvent","event","_this$domElement$owne","ownerDocument","pointerLockElement","_this$domElement","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","_enabled","pointerType","pointerHover","getPointer","_this$domElement$owne2","style","touchAction","addEventListener","onPointerMove","pointerDown","pointerMove","_this$domElement$owne3","removeEventListener","pointerUp","translationSnap","rotationSnap","scaleSnap","size","_size","warn","_this$domElement$owne4","_this$domElement$owne5","onPointerDown","onPointerHover","onPointerUp","traverse","child","mesh","geometry","dispose","material","document","TransformControlsGizmo","TransformControlsPlane","defineProperty","propName","defaultValue","propValue","Object","get","value","_showX","_showY","_showZ","identityQuaternion","gizmo","helper","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","PI","fov","multiplyScalar","tag","tempQuaternion","setFromEuler","tempEuler","abs","alignVector","unitX","unitY","unitZ","setFromRotationMatrix","lookAtMatrix","lookAt","zeroVector","tempVector","clone","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","AXIS_FLIP_TRESHOLD","tempQuaternion2","atan2","multiplyQuaternions","_opacity","opacity","_color","color","lerp","split","some","a","gizmoMaterial","depthTest","depthWrite","transparent","side","fog","toneMapped","gizmoLineMaterial","linewidth","matInvisible","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matYellow","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","scaleHandleGeometry","lineGeometry","setAttribute","CircleGeometry","radius","arc","vertices","push","cos","sin","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","wireframe","dirVector","tempMatrix"],"mappings":"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","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, Color, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry } from 'three';\n\nclass TransformControls extends Object3D {\n  // events\n  constructor(camera, domElement) {\n    super();\n\n    _defineProperty(this, \"isTransformControls\", true);\n\n    _defineProperty(this, \"visible\", false);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"raycaster\", new Raycaster());\n\n    _defineProperty(this, \"_gizmo\", void 0);\n\n    _defineProperty(this, \"_plane\", void 0);\n\n    _defineProperty(this, \"_tempVector\", new Vector3());\n\n    _defineProperty(this, \"_tempVector2\", new Vector3());\n\n    _defineProperty(this, \"_tempQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n\n    _defineProperty(this, \"_pointStart\", new Vector3());\n\n    _defineProperty(this, \"_pointEnd\", new Vector3());\n\n    _defineProperty(this, \"_offset\", new Vector3());\n\n    _defineProperty(this, \"_rotationAxis\", new Vector3());\n\n    _defineProperty(this, \"_startNorm\", new Vector3());\n\n    _defineProperty(this, \"_endNorm\", new Vector3());\n\n    _defineProperty(this, \"_rotationAngle\", 0);\n\n    _defineProperty(this, \"_cameraPosition\", new Vector3());\n\n    _defineProperty(this, \"_cameraQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_cameraScale\", new Vector3());\n\n    _defineProperty(this, \"_parentPosition\", new Vector3());\n\n    _defineProperty(this, \"_parentQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_parentQuaternionInv\", new Quaternion());\n\n    _defineProperty(this, \"_parentScale\", new Vector3());\n\n    _defineProperty(this, \"_worldPositionStart\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"_worldScaleStart\", new Vector3());\n\n    _defineProperty(this, \"_worldPosition\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_worldQuaternionInv\", new Quaternion());\n\n    _defineProperty(this, \"_worldScale\", new Vector3());\n\n    _defineProperty(this, \"_eye\", new Vector3());\n\n    _defineProperty(this, \"_positionStart\", new Vector3());\n\n    _defineProperty(this, \"_quaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"_scaleStart\", new Vector3());\n\n    _defineProperty(this, \"_camera\", void 0);\n\n    _defineProperty(this, \"_object\", void 0);\n\n    _defineProperty(this, \"_enabled\", true);\n\n    _defineProperty(this, \"_axis\", null);\n\n    _defineProperty(this, \"_mode\", 'translate');\n\n    _defineProperty(this, \"_translationSnap\", null);\n\n    _defineProperty(this, \"_rotationSnap\", null);\n\n    _defineProperty(this, \"_scaleSnap\", null);\n\n    _defineProperty(this, \"_space\", 'world');\n\n    _defineProperty(this, \"_size\", 1);\n\n    _defineProperty(this, \"_dragging\", false);\n\n    _defineProperty(this, \"_showX\", true);\n\n    _defineProperty(this, \"_showY\", true);\n\n    _defineProperty(this, \"_showZ\", true);\n\n    _defineProperty(this, \"changeEvent\", {\n      type: 'change'\n    });\n\n    _defineProperty(this, \"mouseDownEvent\", {\n      type: 'mouseDown'\n    });\n\n    _defineProperty(this, \"mouseUpEvent\", {\n      type: 'mouseUp',\n      mode: this._mode\n    });\n\n    _defineProperty(this, \"objectChangeEvent\", {\n      type: 'objectChange'\n    });\n\n    _defineProperty(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n\n      return false;\n    });\n\n    _defineProperty(this, \"attach\", object => {\n      this._object = object;\n      this.visible = true;\n      return this;\n    });\n\n    _defineProperty(this, \"detach\", () => {\n      this._object = undefined;\n      this.visible = false;\n      this._axis = null;\n      return this;\n    });\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      if (this._object !== undefined) {\n        this._object.updateMatrixWorld();\n\n        if (this._object.parent === null) {\n          console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n        } else {\n          this._object.parent.matrixWorld.decompose(this._parentPosition, this._parentQuaternion, this._parentScale);\n        }\n\n        this._object.matrixWorld.decompose(this._worldPosition, this._worldQuaternion, this._worldScale);\n\n        this._parentQuaternionInv.copy(this._parentQuaternion).invert();\n\n        this._worldQuaternionInv.copy(this._worldQuaternion).invert();\n      }\n\n      this._camera.updateMatrixWorld();\n\n      this._camera.matrixWorld.decompose(this._cameraPosition, this._cameraQuaternion, this._cameraScale);\n\n      this._eye.copy(this._cameraPosition).sub(this._worldPosition).normalize();\n\n      super.updateMatrixWorld();\n    });\n\n    _defineProperty(this, \"pointerHover\", pointer => {\n      if (this._object === undefined || this._dragging === true) return;\n      this.raycaster.setFromCamera(pointer, this._camera);\n      const intersect = this.intersectObjectWithRay(this._gizmo.picker[this._mode], this.raycaster);\n\n      if (intersect) {\n        this._axis = intersect.object.name;\n      } else {\n        this._axis = null;\n      }\n    });\n\n    _defineProperty(this, \"pointerDown\", pointer => {\n      if (this._object === undefined || this._dragging === true || pointer.button !== 0) return;\n\n      if (this._axis !== null) {\n        this.raycaster.setFromCamera(pointer, this._camera);\n        const planeIntersect = this.intersectObjectWithRay(this._plane, this.raycaster, true);\n\n        if (planeIntersect) {\n          let space = this._space;\n\n          if (this._mode === 'scale') {\n            space = 'local';\n          } else if (this._axis === 'E' || this._axis === 'XYZE' || this._axis === 'XYZ') {\n            space = 'world';\n          }\n\n          if (space === 'local' && this._mode === 'rotate') {\n            const snap = this._rotationSnap;\n            if (this._axis === 'X' && snap) this._object.rotation.x = Math.round(this._object.rotation.x / snap) * snap;\n            if (this._axis === 'Y' && snap) this._object.rotation.y = Math.round(this._object.rotation.y / snap) * snap;\n            if (this._axis === 'Z' && snap) this._object.rotation.z = Math.round(this._object.rotation.z / snap) * snap;\n          }\n\n          this._object.updateMatrixWorld();\n\n          if (this._object.parent) {\n            this._object.parent.updateMatrixWorld();\n          }\n\n          this._positionStart.copy(this._object.position);\n\n          this._quaternionStart.copy(this._object.quaternion);\n\n          this._scaleStart.copy(this._object.scale);\n\n          this._object.matrixWorld.decompose(this._worldPositionStart, this._worldQuaternionStart, this._worldScaleStart);\n\n          this._pointStart.copy(planeIntersect.point).sub(this._worldPositionStart);\n        }\n\n        this._dragging = true;\n        this.mouseDownEvent.type = this._mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n\n    _defineProperty(this, \"pointerMove\", pointer => {\n      const axis = this._axis;\n      const mode = this._mode;\n      const object = this._object;\n      let space = this._space;\n\n      if (mode === 'scale') {\n        space = 'local';\n      } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n        space = 'world';\n      }\n\n      if (object === undefined || axis === null || this._dragging === false || pointer.button !== -1) return;\n      this.raycaster.setFromCamera(pointer, this._camera);\n      const planeIntersect = this.intersectObjectWithRay(this._plane, this.raycaster, true);\n      if (!planeIntersect) return;\n\n      this._pointEnd.copy(planeIntersect.point).sub(this._worldPositionStart);\n\n      if (mode === 'translate') {\n        // Apply translate\n        this._offset.copy(this._pointEnd).sub(this._pointStart);\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this._offset.applyQuaternion(this._worldQuaternionInv);\n        }\n\n        if (axis.indexOf('X') === -1) this._offset.x = 0;\n        if (axis.indexOf('Y') === -1) this._offset.y = 0;\n        if (axis.indexOf('Z') === -1) this._offset.z = 0;\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale);\n        } else {\n          this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale);\n        }\n\n        object.position.copy(this._offset).add(this._positionStart); // Apply translation snap\n\n        if (this._translationSnap) {\n          if (space === 'local') {\n            object.position.applyQuaternion(this._tempQuaternion.copy(this._quaternionStart).invert());\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this._translationSnap) * this._translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this._translationSnap) * this._translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this._translationSnap) * this._translationSnap;\n            }\n\n            object.position.applyQuaternion(this._quaternionStart);\n          }\n\n          if (space === 'world') {\n            if (object.parent) {\n              object.position.add(this._tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this._translationSnap) * this._translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this._translationSnap) * this._translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this._translationSnap) * this._translationSnap;\n            }\n\n            if (object.parent) {\n              object.position.sub(this._tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === 'scale') {\n        if (axis.search('XYZ') !== -1) {\n          let d = this._pointEnd.length() / this._pointStart.length();\n\n          if (this._pointEnd.dot(this._pointStart) < 0) d *= -1;\n\n          this._tempVector2.set(d, d, d);\n        } else {\n          this._tempVector.copy(this._pointStart);\n\n          this._tempVector2.copy(this._pointEnd);\n\n          this._tempVector.applyQuaternion(this._worldQuaternionInv);\n\n          this._tempVector2.applyQuaternion(this._worldQuaternionInv);\n\n          this._tempVector2.divide(this._tempVector);\n\n          if (axis.search('X') === -1) {\n            this._tempVector2.x = 1;\n          }\n\n          if (axis.search('Y') === -1) {\n            this._tempVector2.y = 1;\n          }\n\n          if (axis.search('Z') === -1) {\n            this._tempVector2.z = 1;\n          }\n        } // Apply scale\n\n\n        object.scale.copy(this._scaleStart).multiply(this._tempVector2);\n\n        if (this._scaleSnap && this._object) {\n          if (axis.search('X') !== -1) {\n            this._object.scale.x = Math.round(object.scale.x / this._scaleSnap) * this._scaleSnap || this._scaleSnap;\n          }\n\n          if (axis.search('Y') !== -1) {\n            object.scale.y = Math.round(object.scale.y / this._scaleSnap) * this._scaleSnap || this._scaleSnap;\n          }\n\n          if (axis.search('Z') !== -1) {\n            object.scale.z = Math.round(object.scale.z / this._scaleSnap) * this._scaleSnap || this._scaleSnap;\n          }\n        }\n      } else if (mode === 'rotate') {\n        this._offset.copy(this._pointEnd).sub(this._pointStart);\n\n        const ROTATION_SPEED = 20 / this._worldPosition.distanceTo(this._tempVector.setFromMatrixPosition(this._camera.matrixWorld));\n\n        if (axis === 'E') {\n          this._rotationAxis.copy(this._eye);\n\n          this._rotationAngle = this._pointEnd.angleTo(this._pointStart);\n\n          this._startNorm.copy(this._pointStart).normalize();\n\n          this._endNorm.copy(this._pointEnd).normalize();\n\n          this._rotationAngle *= this._endNorm.cross(this._startNorm).dot(this._eye) < 0 ? 1 : -1;\n        } else if (axis === 'XYZE') {\n          this._rotationAxis.copy(this._offset).cross(this._eye).normalize();\n\n          this._rotationAngle = this._offset.dot(this._tempVector.copy(this._rotationAxis).cross(this._eye)) * ROTATION_SPEED;\n        } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n          this._rotationAxis.copy(this._unit[axis]);\n\n          this._tempVector.copy(this._unit[axis]);\n\n          if (space === 'local') {\n            this._tempVector.applyQuaternion(this._worldQuaternion);\n          }\n\n          this._rotationAngle = this._offset.dot(this._tempVector.cross(this._eye).normalize()) * ROTATION_SPEED;\n        } // Apply rotation snap\n\n\n        if (this._rotationSnap) {\n          this._rotationAngle = Math.round(this._rotationAngle / this._rotationSnap) * this._rotationSnap;\n        } // Apply rotate\n\n\n        if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n          object.quaternion.copy(this._quaternionStart);\n          object.quaternion.multiply(this._tempQuaternion.setFromAxisAngle(this._rotationAxis, this._rotationAngle)).normalize();\n        } else {\n          this._rotationAxis.applyQuaternion(this._parentQuaternionInv);\n\n          object.quaternion.copy(this._tempQuaternion.setFromAxisAngle(this._rotationAxis, this._rotationAngle));\n          object.quaternion.multiply(this._quaternionStart).normalize();\n        }\n      }\n\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n\n    _defineProperty(this, \"pointerUp\", pointer => {\n      if (pointer.button !== 0) return;\n\n      if (this._dragging && this._axis !== null) {\n        this.mouseUpEvent.mode = this._mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n\n      this._dragging = false;\n      this._axis = null;\n    });\n\n    _defineProperty(this, \"getPointer\", event => {\n      var _this$domElement$owne;\n\n      if (this.domElement && (_this$domElement$owne = this.domElement.ownerDocument) !== null && _this$domElement$owne !== void 0 && _this$domElement$owne.pointerLockElement) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        var _this$domElement;\n\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_this$domElement = this.domElement) === null || _this$domElement === void 0 ? void 0 : _this$domElement.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n\n    _defineProperty(this, \"onPointerHover\", event => {\n      if (!this._enabled) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n\n    _defineProperty(this, \"onPointerDown\", event => {\n      var _this$domElement$owne2;\n\n      if (!this._enabled) return;\n      this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n      (_this$domElement$owne2 = this.domElement.ownerDocument) === null || _this$domElement$owne2 === void 0 ? void 0 : _this$domElement$owne2.addEventListener('pointermove', this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"onPointerMove\", event => {\n      if (!this._enabled) return;\n      this.pointerMove(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"onPointerUp\", event => {\n      var _this$domElement$owne3;\n\n      if (!this._enabled) return;\n      this.domElement.style.touchAction = '';\n      (_this$domElement$owne3 = this.domElement.ownerDocument) === null || _this$domElement$owne3 === void 0 ? void 0 : _this$domElement$owne3.removeEventListener('pointermove', this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"getMode\", () => this._mode);\n\n    _defineProperty(this, \"setMode\", mode => {\n      this._mode = mode;\n    });\n\n    _defineProperty(this, \"setTranslationSnap\", translationSnap => {\n      this._translationSnap = translationSnap;\n    });\n\n    _defineProperty(this, \"setRotationSnap\", rotationSnap => {\n      this._rotationSnap = rotationSnap;\n    });\n\n    _defineProperty(this, \"setScaleSnap\", scaleSnap => {\n      this._scaleSnap = scaleSnap;\n    });\n\n    _defineProperty(this, \"setSize\", size => {\n      this._size = size;\n    });\n\n    _defineProperty(this, \"setSpace\", space => {\n      this._space = space;\n    });\n\n    _defineProperty(this, \"update\", () => {\n      console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n    });\n\n    _defineProperty(this, \"dispose\", () => {\n      var _this$domElement$owne4, _this$domElement$owne5;\n\n      this.domElement.removeEventListener('pointerdown', this.onPointerDown);\n      this.domElement.removeEventListener('pointermove', this.onPointerHover);\n      (_this$domElement$owne4 = this.domElement.ownerDocument) === null || _this$domElement$owne4 === void 0 ? void 0 : _this$domElement$owne4.removeEventListener('pointermove', this.onPointerMove);\n      (_this$domElement$owne5 = this.domElement.ownerDocument) === null || _this$domElement$owne5 === void 0 ? void 0 : _this$domElement$owne5.removeEventListener('pointerup', this.onPointerUp);\n      this.traverse(child => {\n        const mesh = child;\n\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n\n    if (domElement === undefined) {\n      console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n      this.domElement = document;\n    }\n\n    this.domElement = domElement;\n    this._camera = camera;\n    this._gizmo = new TransformControlsGizmo();\n    this.add(this._gizmo);\n    this._plane = new TransformControlsPlane();\n    this.add(this._plane); // Defined getter, setter and store for a property\n\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function () {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            this._plane[propName] = value;\n            this._gizmo[propName] = value;\n            this.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      }); //@ts-ignore\n\n      this[propName] = defaultValue; // @ts-ignore\n\n      this._plane[propName] = defaultValue; // @ts-ignore\n\n      this._gizmo[propName] = defaultValue;\n    };\n\n    defineProperty('_camera', this._camera);\n    defineProperty('_object', this._object);\n    defineProperty('_enabled', this._enabled);\n    defineProperty('_axis', this._axis);\n    defineProperty('_mode', this._mode);\n    defineProperty('_translationSnap', this._translationSnap);\n    defineProperty('_rotationSnap', this._rotationSnap);\n    defineProperty('_scaleSnap', this._scaleSnap);\n    defineProperty('_space', this._space);\n    defineProperty('_size', this._size);\n    defineProperty('_dragging', this._dragging);\n    defineProperty('_showX', this._showX);\n    defineProperty('_showY', this._showY);\n    defineProperty('_showZ', this._showZ);\n    defineProperty('_worldPosition', this._worldPosition);\n    defineProperty('_worldPositionStart', this._worldPositionStart);\n    defineProperty('_worldQuaternion', this._worldQuaternion);\n    defineProperty('_worldQuaternionStart', this._worldQuaternionStart);\n    defineProperty('_cameraPosition', this._cameraPosition);\n    defineProperty('_cameraQuaternion', this._cameraQuaternion);\n    defineProperty('_pointStart', this._pointStart);\n    defineProperty('_pointEnd', this._pointEnd);\n    defineProperty('_rotationAxis', this._rotationAxis);\n    defineProperty('_rotationAngle', this._rotationAngle);\n    defineProperty('_eye', this._eye);\n    {\n      domElement.addEventListener('pointerdown', this.onPointerDown);\n      domElement.addEventListener('pointermove', this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp);\n    }\n  }\n\n}\n\nclass TransformControlsGizmo extends Object3D {\n  // these are set from parent class TransformControls\n  constructor() {\n    super();\n\n    _defineProperty(this, \"isTransformControlsGizmo\", true);\n\n    _defineProperty(this, \"type\", 'TransformControlsGizmo');\n\n    _defineProperty(this, \"tempVector\", new Vector3(0, 0, 0));\n\n    _defineProperty(this, \"tempEuler\", new Euler());\n\n    _defineProperty(this, \"alignVector\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"zeroVector\", new Vector3(0, 0, 0));\n\n    _defineProperty(this, \"lookAtMatrix\", new Matrix4());\n\n    _defineProperty(this, \"tempQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"tempQuaternion2\", new Quaternion());\n\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"gizmo\", void 0);\n\n    _defineProperty(this, \"picker\", void 0);\n\n    _defineProperty(this, \"helper\", void 0);\n\n    _defineProperty(this, \"_rotationAxis\", new Vector3());\n\n    _defineProperty(this, \"_cameraPosition\", new Vector3());\n\n    _defineProperty(this, \"_worldPositionStart\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"_worldPosition\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_eye\", new Vector3());\n\n    _defineProperty(this, \"_camera\", null);\n\n    _defineProperty(this, \"_enabled\", true);\n\n    _defineProperty(this, \"_axis\", null);\n\n    _defineProperty(this, \"_mode\", 'translate');\n\n    _defineProperty(this, \"_space\", 'world');\n\n    _defineProperty(this, \"_size\", 1);\n\n    _defineProperty(this, \"_dragging\", false);\n\n    _defineProperty(this, \"_showX\", true);\n\n    _defineProperty(this, \"_showY\", true);\n\n    _defineProperty(this, \"_showZ\", true);\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this._space;\n\n      if (this._mode === 'scale') {\n        space = 'local'; // scale always oriented to local rotation\n      }\n\n      const quaternion = space === 'local' ? this._worldQuaternion : this.identityQuaternion; // Show only gizmos for current transform mode\n\n      this.gizmo['translate'].visible = this._mode === 'translate';\n      this.gizmo['rotate'].visible = this._mode === 'rotate';\n      this.gizmo['scale'].visible = this._mode === 'scale';\n      this.helper['translate'].visible = this._mode === 'translate';\n      this.helper['rotate'].visible = this._mode === 'rotate';\n      this.helper['scale'].visible = this._mode === 'scale';\n      let handles = [];\n      handles = handles.concat(this.picker[this._mode].children);\n      handles = handles.concat(this.gizmo[this._mode].children);\n      handles = handles.concat(this.helper[this._mode].children);\n\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i]; // hide aligned to camera\n\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this._worldPosition);\n        let factor;\n\n        if (this._camera.isOrthographicCamera) {\n          factor = (this._camera.top - this._camera.bottom) / this._camera.zoom;\n        } else {\n          factor = this._worldPosition.distanceTo(this._cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this._camera.fov / 360) / this._camera.zoom, 7);\n        }\n\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this._size / 7); // TODO: simplify helpers and consider decoupling from gizmo\n\n        if (handle.tag === 'helper') {\n          handle.visible = false;\n\n          if (handle.name === 'AXIS') {\n            handle.position.copy(this._worldPositionStart);\n            handle.visible = !!this._axis;\n\n            if (this._axis === 'X') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this._eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this._axis === 'Y') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this._eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this._axis === 'Z') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this._eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this._axis === 'XYZE') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this._rotationAxis);\n              handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY));\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this._dragging;\n            }\n\n            if (this._axis === 'E') {\n              handle.visible = false;\n            }\n          } else if (handle.name === 'START') {\n            handle.position.copy(this._worldPositionStart);\n            handle.visible = this._dragging;\n          } else if (handle.name === 'END') {\n            handle.position.copy(this._worldPosition);\n            handle.visible = this._dragging;\n          } else if (handle.name === 'DELTA') {\n            handle.position.copy(this._worldPositionStart);\n            handle.quaternion.copy(this._worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this._worldPositionStart).sub(this._worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this._worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this._dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n\n            if (this._dragging) {\n              handle.position.copy(this._worldPositionStart);\n            } else {\n              handle.position.copy(this._worldPosition);\n            }\n\n            if (this._axis) {\n              handle.visible = this._axis.search(handle.name) !== -1;\n            }\n          } // If updating helper, skip rest of the loop\n\n\n          continue;\n        } // Align handles to current local or world rotation\n\n\n        handle.quaternion.copy(quaternion);\n\n        if (this._mode === 'translate' || this._mode === 'scale') {\n          // Hide translate and scale axis facing the camera\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0.0;\n\n          if (handle.name === 'X' || handle.name === 'XYZX') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this._eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Y' || handle.name === 'XYZY') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this._eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Z' || handle.name === 'XYZZ') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this._eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XY') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this._eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'YZ') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this._eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XZ') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this._eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          } // Flip translate and scale axis ocluded behind another axis\n\n\n          if (handle.name.search('X') !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this._eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search('Y') !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this._eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search('Z') !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this._eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n        } else if (this._mode === 'rotate') {\n          // Align handles to current local or world rotation\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this._eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n\n          if (handle.name.search('E') !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this._eye, this.zeroVector, this.unitY));\n          }\n\n          if (handle.name === 'X') {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === 'Y') {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === 'Z') {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        } // Hide disabled axes\n\n\n        handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || this._showX);\n        handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || this._showY);\n        handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || this._showZ);\n        handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || this._showX && this._showY && this._showZ); // highlight selected axis\n        //@ts-ignore\n\n        handle.material._opacity = handle.material._opacity || handle.material.opacity; //@ts-ignore\n\n        handle.material._color = handle.material._color || handle.material.color.clone(); //@ts-ignore\n\n        handle.material.color.copy(handle.material._color); //@ts-ignore\n\n        handle.material.opacity = handle.material._opacity;\n\n        if (!this._enabled) {\n          //@ts-ignore\n          handle.material.opacity *= 0.5; //@ts-ignore\n\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this._axis) {\n          if (handle.name === this._axis) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this._axis.split('').some(function (a) {\n            return handle.name === a;\n          })) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            //@ts-ignore\n            handle.material.opacity *= 0.25; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n\n      super.updateMatrixWorld();\n    });\n\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    }); // Make unique material for each axis/color\n\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(0xff0000);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(0x00ff00);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(0x0000ff);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(0xffff00);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(0x00ffff);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(0xff00ff);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(0xffff00);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(0xff0000);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(0x00ff00);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(0x0000ff);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(0x00ffff);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(0xff00ff);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(0xffff00);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(0x787878);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25; // reusable geometry\n\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    }; // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }; // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, 'fwd'], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, 'bwd'], [new Line(lineGeometry, matLineRed)]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, 'fwd'], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, 'fwd'], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [[new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    const gizmoRotate = {\n      X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n      Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n      Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n      E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 0.001]]],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n      XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    }; // Creates an Object3D with gizmos described in custom hierarchy definition.\n    // this is nearly impossible to Type so i'm leaving it\n\n    const setupGizmo = gizmoMap => {\n      const gizmo = new Object3D();\n\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4]; // name and tag properties are essential for picking and updating logic.\n\n          object.name = name; // @ts-ignore\n\n          object.tag = tag;\n\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n\n      return gizmo;\n    };\n\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo['translate'] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo['rotate'] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo['scale'] = setupGizmo(gizmoScale));\n    this.add(this.picker['translate'] = setupGizmo(pickerTranslate));\n    this.add(this.picker['rotate'] = setupGizmo(pickerRotate));\n    this.add(this.picker['scale'] = setupGizmo(pickerScale));\n    this.add(this.helper['translate'] = setupGizmo(helperTranslate));\n    this.add(this.helper['rotate'] = setupGizmo(helperRotate));\n    this.add(this.helper['scale'] = setupGizmo(helperScale)); // Pickers should be hidden always\n\n    this.picker['translate'].visible = false;\n    this.picker['rotate'].visible = false;\n    this.picker['scale'].visible = false;\n  } // updateMatrixWorld will update transformations and appearance of individual handles\n\n\n}\n\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n\n    _defineProperty(this, \"isTransformControlsPlane\", true);\n\n    _defineProperty(this, \"type\", 'TransformControlsPlane');\n\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"tempVector\", new Vector3());\n\n    _defineProperty(this, \"dirVector\", new Vector3());\n\n    _defineProperty(this, \"alignVector\", new Vector3());\n\n    _defineProperty(this, \"tempMatrix\", new Matrix4());\n\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_cameraQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_worldPosition\", new Vector3());\n\n    _defineProperty(this, \"_worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"_eye\", new Vector3());\n\n    _defineProperty(this, \"_axis\", null);\n\n    _defineProperty(this, \"_mode\", 'translate');\n\n    _defineProperty(this, \"_space\", 'world');\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this._space;\n      this.position.copy(this._worldPosition);\n      if (this._mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n      this.unitX.set(1, 0, 0).applyQuaternion(space === 'local' ? this._worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === 'local' ? this._worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === 'local' ? this._worldQuaternion : this.identityQuaternion); // Align the plane for current transform mode, axis and space.\n\n      this.alignVector.copy(this.unitY);\n\n      switch (this._mode) {\n        case 'translate':\n        case 'scale':\n          switch (this._axis) {\n            case 'X':\n              this.alignVector.copy(this._eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n\n            case 'Y':\n              this.alignVector.copy(this._eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n\n            case 'Z':\n              this.alignVector.copy(this._eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n\n            case 'XY':\n              this.dirVector.copy(this.unitZ);\n              break;\n\n            case 'YZ':\n              this.dirVector.copy(this.unitX);\n              break;\n\n            case 'XZ':\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n\n            case 'XYZ':\n            case 'E':\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n\n          break;\n\n        case 'rotate':\n        default:\n          // special case for rotate\n          this.dirVector.set(0, 0, 0);\n      }\n\n      if (this.dirVector.length() === 0) {\n        // If in rotate mode, make the plane parallel to camera\n        this.quaternion.copy(this._cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n\n      super.updateMatrixWorld();\n    });\n  }\n\n}\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"]},"metadata":{},"sourceType":"module"}