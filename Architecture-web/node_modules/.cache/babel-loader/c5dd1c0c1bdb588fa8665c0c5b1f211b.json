{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React, { forwardRef, useState, useMemo, Children, useLayoutEffect } from 'react';\nimport { useThree } from 'react-three-fiber';\nimport { Text as Text$1 } from 'troika-three-text';\nconst Text = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    anchorX = 'center',\n    anchorY = 'middle',\n    children,\n    onSync\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"anchorX\", \"anchorY\", \"children\", \"onSync\"]);\n\n  const {\n    invalidate\n  } = useThree();\n  const [troikaMesh] = useState(() => new Text$1());\n  const [nodes, text] = useMemo(() => {\n    let n = [];\n    let t = '';\n    Children.forEach(children, child => {\n      if (typeof child === 'string') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: troikaMesh,\n    ref: ref,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\nexport { Text };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/drei/Text.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","forwardRef","useState","useMemo","Children","useLayoutEffect","useThree","Text","Text$1","_ref","ref","anchorX","anchorY","children","onSync","props","invalidate","troikaMesh","nodes","text","n","t","forEach","child","push","sync","createElement","dispose","undefined","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,OAAtC,EAA+CC,QAA/C,EAAyDC,eAAzD,QAAgF,OAAhF;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,mBAA/B;AAEA,MAAMD,IAAI,GAAG,aAAaN,UAAU,CAAC,CAACQ,IAAD,EAAOC,GAAP,KAAe;AAClD,MAAI;AACFC,IAAAA,OAAO,GAAG,QADR;AAEFC,IAAAA,OAAO,GAAG,QAFR;AAGFC,IAAAA,QAHE;AAIFC,IAAAA;AAJE,MAKAL,IALJ;AAAA,MAMIM,KAAK,GAAGhB,6BAA6B,CAACU,IAAD,EAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,UAAvB,EAAmC,QAAnC,CAAP,CANzC;;AAQA,QAAM;AACJO,IAAAA;AADI,MAEFV,QAAQ,EAFZ;AAGA,QAAM,CAACW,UAAD,IAAef,QAAQ,CAAC,MAAM,IAAIM,MAAJ,EAAP,CAA7B;AACA,QAAM,CAACU,KAAD,EAAQC,IAAR,IAAgBhB,OAAO,CAAC,MAAM;AAClC,QAAIiB,CAAC,GAAG,EAAR;AACA,QAAIC,CAAC,GAAG,EAAR;AACAjB,IAAAA,QAAQ,CAACkB,OAAT,CAAiBT,QAAjB,EAA2BU,KAAK,IAAI;AAClC,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BF,QAAAA,CAAC,IAAIE,KAAL;AACD,OAFD,MAEO;AACLH,QAAAA,CAAC,CAACI,IAAF,CAAOD,KAAP;AACD;AACF,KAND;AAOA,WAAO,CAACH,CAAD,EAAIC,CAAJ,CAAP;AACD,GAX4B,EAW1B,CAACR,QAAD,CAX0B,CAA7B;AAYAR,EAAAA,eAAe,CAAC,MAAM,KAAKY,UAAU,CAACQ,IAAX,CAAgB,MAAM;AAC/CT,IAAAA,UAAU;AACV,QAAIF,MAAJ,EAAYA,MAAM,CAACG,UAAD,CAAN;AACb,GAH0B,CAAZ,CAAf;AAIA,SAAO,aAAajB,KAAK,CAAC0B,aAAN,CAAoB,WAApB,EAAiC5B,QAAQ,CAAC;AAC5D6B,IAAAA,OAAO,EAAEC,SADmD;AAE5DC,IAAAA,MAAM,EAAEZ,UAFoD;AAG5DP,IAAAA,GAAG,EAAEA,GAHuD;AAI5DS,IAAAA,IAAI,EAAEA,IAJsD;AAK5DR,IAAAA,OAAO,EAAEA,OALmD;AAM5DC,IAAAA,OAAO,EAAEA;AANmD,GAAD,EAO1DG,KAP0D,CAAzC,EAOTG,KAPS,CAApB;AAQD,CArCmC,CAApC;AAuCA,SAASX,IAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React, { forwardRef, useState, useMemo, Children, useLayoutEffect } from 'react';\nimport { useThree } from 'react-three-fiber';\nimport { Text as Text$1 } from 'troika-three-text';\n\nconst Text = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    anchorX = 'center',\n    anchorY = 'middle',\n    children,\n    onSync\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"anchorX\", \"anchorY\", \"children\", \"onSync\"]);\n\n  const {\n    invalidate\n  } = useThree();\n  const [troikaMesh] = useState(() => new Text$1());\n  const [nodes, text] = useMemo(() => {\n    let n = [];\n    let t = '';\n    Children.forEach(children, child => {\n      if (typeof child === 'string') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: troikaMesh,\n    ref: ref,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\n\nexport { Text };\n"]},"metadata":{},"sourceType":"module"}