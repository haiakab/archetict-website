{"ast":null,"code":"import _slicedToArray from \"/Users/haiakablan/Documents/\\u05DC\\u05D5\\u05D8\\u05D5\\u05E1/\\u05E7\\u05D5\\u05E8\\u05E1/Architecture-web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { WebGLMultisampleRenderTarget, RGBAFormat, sRGBEncoding } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { GammaCorrectionShader } from 'three/examples/jsm/shaders/GammaCorrectionShader';\nextend({\n  EffectComposer: EffectComposer,\n  RenderPass: RenderPass,\n  ShaderPass: ShaderPass\n});\n\nvar isWebGL2Available = function isWebGL2Available() {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n  } catch (e) {\n    return false;\n  }\n};\n\nvar Effects = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      _ref$multisamping = _ref.multisamping,\n      multisamping = _ref$multisamping === void 0 ? 8 : _ref$multisamping,\n      _ref$renderIndex = _ref.renderIndex,\n      renderIndex = _ref$renderIndex === void 0 ? 1 : _ref$renderIndex,\n      _ref$disableGamma = _ref.disableGamma,\n      disableGamma = _ref$disableGamma === void 0 ? false : _ref$disableGamma,\n      _ref$disableRenderPas = _ref.disableRenderPass,\n      disableRenderPass = _ref$disableRenderPas === void 0 ? false : _ref$disableRenderPas,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"multisamping\", \"renderIndex\", \"disableGamma\", \"disableRenderPass\"]);\n\n  var composer = useRef();\n\n  var _useThree = useThree(),\n      scene = _useThree.scene,\n      camera = _useThree.camera,\n      gl = _useThree.gl,\n      size = _useThree.size;\n\n  var _useState = useState(function () {\n    if (isWebGL2Available() && multisamping > 0) {\n      var t = new WebGLMultisampleRenderTarget(size.width, size.height, {\n        format: RGBAFormat,\n        encoding: sRGBEncoding\n      });\n      t.samples = 8;\n      return t;\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      target = _useState2[0];\n\n  useEffect(function () {\n    var _composer$current, _composer$current2;\n\n    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);\n    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(gl.getPixelRatio());\n  }, [gl, size]);\n  useFrame(function () {\n    var _composer$current3;\n\n    return (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();\n  }, renderIndex);\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\n    ref: mergeRefs([ref, composer]),\n    args: [gl, target]\n  }, props), !disableRenderPass && /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera]\n  }), !disableGamma && /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [GammaCorrectionShader]\n  }), children);\n});\nexport { Effects, isWebGL2Available };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/drei/Effects.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","forwardRef","useRef","useState","useEffect","extend","useThree","useFrame","mergeRefs","WebGLMultisampleRenderTarget","RGBAFormat","sRGBEncoding","EffectComposer","RenderPass","ShaderPass","GammaCorrectionShader","isWebGL2Available","canvas","document","createElement","window","WebGL2RenderingContext","getContext","e","Effects","_ref","ref","children","multisamping","renderIndex","disableGamma","disableRenderPass","props","composer","scene","camera","gl","size","t","width","height","format","encoding","samples","target","_composer$current","_composer$current2","current","setSize","setPixelRatio","getPixelRatio","_composer$current3","render","args","attachArray"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { WebGLMultisampleRenderTarget, RGBAFormat, sRGBEncoding } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { GammaCorrectionShader } from 'three/examples/jsm/shaders/GammaCorrectionShader';\n\nextend({\n  EffectComposer,\n  RenderPass,\n  ShaderPass\n});\nconst isWebGL2Available = () => {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n  } catch (e) {\n    return false;\n  }\n};\nconst Effects = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    multisamping = 8,\n    renderIndex = 1,\n    disableGamma = false,\n    disableRenderPass = false\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"multisamping\", \"renderIndex\", \"disableGamma\", \"disableRenderPass\"]);\n\n  const composer = useRef();\n  const {\n    scene,\n    camera,\n    gl,\n    size\n  } = useThree();\n  const [target] = useState(() => {\n    if (isWebGL2Available() && multisamping > 0) {\n      const t = new WebGLMultisampleRenderTarget(size.width, size.height, {\n        format: RGBAFormat,\n        encoding: sRGBEncoding\n      });\n      t.samples = 8;\n      return t;\n    }\n  });\n  useEffect(() => {\n    var _composer$current, _composer$current2;\n\n    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);\n    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(gl.getPixelRatio());\n  }, [gl, size]);\n  useFrame(() => {\n    var _composer$current3;\n\n    return (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();\n  }, renderIndex);\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\n    ref: mergeRefs([ref, composer]),\n    args: [gl, target]\n  }, props), !disableRenderPass && /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera]\n  }), !disableGamma && /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [GammaCorrectionShader]\n  }), children);\n});\n\nexport { Effects, isWebGL2Available };\n"]},"metadata":{},"sourceType":"module"}