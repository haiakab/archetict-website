{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, useMemo, useLayoutEffect, createElement } from 'react';\nimport { Vector2, Vector3, Color } from 'three';\nimport { Line2, LineMaterial, LineGeometry } from 'three-stdlib';\nconst Line = /*#__PURE__*/forwardRef(function Line(_ref, ref) {\n  let {\n    points,\n    color = 'black',\n    vertexColors,\n    lineWidth,\n    dashed\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"points\", \"color\", \"vertexColors\", \"lineWidth\", \"dashed\"]);\n\n  const [line2] = useState(() => new Line2());\n  const [lineMaterial] = useState(() => new LineMaterial());\n  const [resolution] = useState(() => new Vector2(512, 512));\n  const lineGeom = useMemo(() => {\n    const geom = new LineGeometry();\n    const pValues = points.map(p => p instanceof Vector3 ? p.toArray() : p);\n    geom.setPositions(pValues.flat());\n\n    if (vertexColors) {\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat());\n    }\n\n    return geom;\n  }, [points, vertexColors]);\n  useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/createElement(\"primitive\", {\n    dispose: undefined,\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: resolution,\n    linewidth: lineWidth,\n    dashed: dashed\n  }, rest)));\n});\nexport { Line };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/@react-three/drei/core/Line.js"],"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useState","useMemo","useLayoutEffect","createElement","Vector2","Vector3","Color","Line2","LineMaterial","LineGeometry","Line","_ref","ref","points","color","vertexColors","lineWidth","dashed","rest","line2","lineMaterial","resolution","lineGeom","geom","pValues","map","p","toArray","setPositions","flat","cValues","c","setColors","computeLineDistances","defines","USE_DASH","needsUpdate","dispose","undefined","object","attach","Boolean","linewidth"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, useMemo, useLayoutEffect, createElement } from 'react';\nimport { Vector2, Vector3, Color } from 'three';\nimport { Line2, LineMaterial, LineGeometry } from 'three-stdlib';\n\nconst Line = /*#__PURE__*/forwardRef(function Line(_ref, ref) {\n  let {\n    points,\n    color = 'black',\n    vertexColors,\n    lineWidth,\n    dashed\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"points\", \"color\", \"vertexColors\", \"lineWidth\", \"dashed\"]);\n\n  const [line2] = useState(() => new Line2());\n  const [lineMaterial] = useState(() => new LineMaterial());\n  const [resolution] = useState(() => new Vector2(512, 512));\n  const lineGeom = useMemo(() => {\n    const geom = new LineGeometry();\n    const pValues = points.map(p => p instanceof Vector3 ? p.toArray() : p);\n    geom.setPositions(pValues.flat());\n\n    if (vertexColors) {\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat());\n    }\n\n    return geom;\n  }, [points, vertexColors]);\n  useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/createElement(\"primitive\", {\n    dispose: undefined,\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: resolution,\n    linewidth: lineWidth,\n    dashed: dashed\n  }, rest)));\n});\n\nexport { Line };\n"]},"metadata":{},"sourceType":"module"}