{"ast":null,"code":"import { useState } from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\n\nfunction useCamera(camera, props) {\n  const mouse = useThree(state => state.mouse);\n  const [raycast] = useState(() => {\n    let raycaster = new Raycaster();\n    /**\n     * applyProps is an internal method of r3f and\n     * therefore requires its first arg to be an\n     * \"Instance\" a term used with the Reconciler\n     * so we have an expect error to mask this\n     */\n    // @ts-expect-error\n\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/@react-three/drei/core/useCamera.js"],"names":["useState","Raycaster","Camera","useThree","applyProps","useCamera","camera","props","mouse","state","raycast","raycaster","_","intersects","setFromCamera","current","rc","constructor","prototype","bind"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;AAChC,QAAMC,KAAK,GAAGL,QAAQ,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAtB;AACA,QAAM,CAACE,OAAD,IAAYV,QAAQ,CAAC,MAAM;AAC/B,QAAIW,SAAS,GAAG,IAAIV,SAAJ,EAAhB;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;;AAEA,QAAIM,KAAJ,EAAWH,UAAU,CAACO,SAAD,EAAYJ,KAAZ,EAAmB,EAAnB,CAAV;AACX,WAAO,UAAUK,CAAV,EAAaC,UAAb,EAAyB;AAC9BF,MAAAA,SAAS,CAACG,aAAV,CAAwBN,KAAxB,EAA+BF,MAAM,YAAYJ,MAAlB,GAA2BI,MAA3B,GAAoCA,MAAM,CAACS,OAA1E;AACA,YAAMC,EAAE,GAAG,KAAKC,WAAL,CAAiBC,SAAjB,CAA2BR,OAA3B,CAAmCS,IAAnC,CAAwC,IAAxC,CAAX;AACA,UAAIH,EAAJ,EAAQA,EAAE,CAACL,SAAD,EAAYE,UAAZ,CAAF;AACT,KAJD;AAKD,GAhByB,CAA1B;AAiBA,SAAOH,OAAP;AACD;;AAED,SAASL,SAAT","sourcesContent":["import { useState } from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\n\nfunction useCamera(camera, props) {\n  const mouse = useThree(state => state.mouse);\n  const [raycast] = useState(() => {\n    let raycaster = new Raycaster();\n    /**\n     * applyProps is an internal method of r3f and\n     * therefore requires its first arg to be an\n     * \"Instance\" a term used with the Reconciler\n     * so we have an expect error to mask this\n     */\n    // @ts-expect-error\n\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };\n"]},"metadata":{},"sourceType":"module"}