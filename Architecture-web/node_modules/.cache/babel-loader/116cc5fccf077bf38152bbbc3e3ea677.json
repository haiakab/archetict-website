{"ast":null,"code":"import { useState } from 'react';\nimport { useThree, applyProps } from 'react-three-fiber';\nimport { Raycaster, Camera } from 'three';\n\nfunction useCamera(camera, props) {\n  const {\n    mouse\n  } = useThree();\n  const [raycast] = useState(() => {\n    let raycaster = new Raycaster();\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/drei/useCamera.js"],"names":["useState","useThree","applyProps","Raycaster","Camera","useCamera","camera","props","mouse","raycast","raycaster","_","intersects","setFromCamera","current","rc","constructor","prototype","bind"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,mBAArC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;AAChC,QAAM;AACJC,IAAAA;AADI,MAEFP,QAAQ,EAFZ;AAGA,QAAM,CAACQ,OAAD,IAAYT,QAAQ,CAAC,MAAM;AAC/B,QAAIU,SAAS,GAAG,IAAIP,SAAJ,EAAhB;AACA,QAAII,KAAJ,EAAWL,UAAU,CAACQ,SAAD,EAAYH,KAAZ,EAAmB,EAAnB,CAAV;AACX,WAAO,UAAUI,CAAV,EAAaC,UAAb,EAAyB;AAC9BF,MAAAA,SAAS,CAACG,aAAV,CAAwBL,KAAxB,EAA+BF,MAAM,YAAYF,MAAlB,GAA2BE,MAA3B,GAAoCA,MAAM,CAACQ,OAA1E;AACA,YAAMC,EAAE,GAAG,KAAKC,WAAL,CAAiBC,SAAjB,CAA2BR,OAA3B,CAAmCS,IAAnC,CAAwC,IAAxC,CAAX;AACA,UAAIH,EAAJ,EAAQA,EAAE,CAACL,SAAD,EAAYE,UAAZ,CAAF;AACT,KAJD;AAKD,GARyB,CAA1B;AASA,SAAOH,OAAP;AACD;;AAED,SAASJ,SAAT","sourcesContent":["import { useState } from 'react';\nimport { useThree, applyProps } from 'react-three-fiber';\nimport { Raycaster, Camera } from 'three';\n\nfunction useCamera(camera, props) {\n  const {\n    mouse\n  } = useThree();\n  const [raycast] = useState(() => {\n    let raycaster = new Raycaster();\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };\n"]},"metadata":{},"sourceType":"module"}