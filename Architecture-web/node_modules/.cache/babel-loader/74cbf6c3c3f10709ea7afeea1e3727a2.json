{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\n\nfunction useHelper(object3D, proto, ...args) {\n  const helper = React.useRef();\n  const {\n    scene\n  } = useThree();\n  useEffect(() => {\n    if (proto && object3D.current) {\n      helper.current = new proto(object3D.current, ...args);\n\n      if (helper.current) {\n        scene.add(helper.current);\n      }\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, proto, object3D, args]);\n  useFrame(() => {\n    if (helper.current) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/drei/useHelper.js"],"names":["React","useEffect","useThree","useFrame","useHelper","object3D","proto","args","helper","useRef","scene","current","add","remove","update"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,KAA7B,EAAoC,GAAGC,IAAvC,EAA6C;AAC3C,QAAMC,MAAM,GAAGR,KAAK,CAACS,MAAN,EAAf;AACA,QAAM;AACJC,IAAAA;AADI,MAEFR,QAAQ,EAFZ;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,IAAID,QAAQ,CAACM,OAAtB,EAA+B;AAC7BH,MAAAA,MAAM,CAACG,OAAP,GAAiB,IAAIL,KAAJ,CAAUD,QAAQ,CAACM,OAAnB,EAA4B,GAAGJ,IAA/B,CAAjB;;AAEA,UAAIC,MAAM,CAACG,OAAX,EAAoB;AAClBD,QAAAA,KAAK,CAACE,GAAN,CAAUJ,MAAM,CAACG,OAAjB;AACD;AACF;;AAED,WAAO,MAAM;AACX,UAAIH,MAAM,CAACG,OAAX,EAAoB;AAClBD,QAAAA,KAAK,CAACG,MAAN,CAAaL,MAAM,CAACG,OAApB;AACD;AACF,KAJD;AAKD,GAdQ,EAcN,CAACD,KAAD,EAAQJ,KAAR,EAAeD,QAAf,EAAyBE,IAAzB,CAdM,CAAT;AAeAJ,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIK,MAAM,CAACG,OAAX,EAAoB;AAClBH,MAAAA,MAAM,CAACG,OAAP,CAAeG,MAAf;AACD;AACF,GAJO,CAAR;AAKA,SAAON,MAAP;AACD;;AAED,SAASJ,SAAT","sourcesContent":["import React, { useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\n\nfunction useHelper(object3D, proto, ...args) {\n  const helper = React.useRef();\n  const {\n    scene\n  } = useThree();\n  useEffect(() => {\n    if (proto && object3D.current) {\n      helper.current = new proto(object3D.current, ...args);\n\n      if (helper.current) {\n        scene.add(helper.current);\n      }\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, proto, object3D, args]);\n  useFrame(() => {\n    if (helper.current) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };\n"]},"metadata":{},"sourceType":"module"}