{"ast":null,"code":"import { useLayoutEffect } from 'react';\nimport { useThree, useLoader } from 'react-three-fiber';\nimport { PMREMGenerator, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { useAsset } from 'use-asset';\n\nfunction getTexture(texture, gen, isCubeMap) {\n  if (isCubeMap) {\n    gen.compileEquirectangularShader();\n    return gen.fromCubemap(texture).texture;\n  }\n\n  return gen.fromEquirectangular(texture).texture;\n}\n\nfunction Environment(_ref) {\n  var _ref$background = _ref.background,\n      background = _ref$background === void 0 ? false : _ref$background,\n      _ref$files = _ref.files,\n      files = _ref$files === void 0 ? ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'] : _ref$files,\n      _ref$path = _ref.path,\n      path = _ref$path === void 0 ? '/' : _ref$path;\n\n  var _useThree = useThree(),\n      gl = _useThree.gl,\n      scene = _useThree.scene;\n\n  var isCubeMap = Array.isArray(files);\n  var loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  var loaderResult = useLoader(loader, isCubeMap ? [files] : files, function (loader) {\n    return loader.setPath(path);\n  });\n  var map = isCubeMap ? loaderResult[0] : loaderResult; // PMREMGenerator takes its sweet time to generate the env-map,\n  // Let's make this part of suspense, or else it just yields a frame-skip\n\n  var texture = useAsset(function () {\n    return new Promise(function (res) {\n      var gen = new PMREMGenerator(gl);\n      var texture = getTexture(map, gen, isCubeMap);\n      gen.dispose();\n      map.dispose();\n      res(texture);\n    });\n  }, [map, background]);\n  useLayoutEffect(function () {\n    var oldbg = scene.background;\n    var oldenv = scene.environment;\n    if (background) scene.background = texture;\n    scene.environment = texture;\n    return function () {\n      scene.environment = oldenv;\n      scene.background = oldbg;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [texture]);\n  return null;\n}\n\nexport { Environment };","map":{"version":3,"sources":["/Users/haiakablan/Documents/לוטוס/קורס/Architecture-web/node_modules/drei/Environment.js"],"names":["useLayoutEffect","useThree","useLoader","PMREMGenerator","CubeTextureLoader","RGBELoader","useAsset","getTexture","texture","gen","isCubeMap","compileEquirectangularShader","fromCubemap","fromEquirectangular","Environment","background","files","path","gl","scene","Array","isArray","loader","loaderResult","setPath","map","Promise","res","dispose","oldbg","oldenv","environment"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,OAAlD;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,GAA7B,EAAkCC,SAAlC,EAA6C;AAC3C,MAAIA,SAAJ,EAAe;AACbD,IAAAA,GAAG,CAACE,4BAAJ;AACA,WAAOF,GAAG,CAACG,WAAJ,CAAgBJ,OAAhB,EAAyBA,OAAhC;AACD;;AAED,SAAOC,GAAG,CAACI,mBAAJ,CAAwBL,OAAxB,EAAiCA,OAAxC;AACD;;AAED,SAASM,WAAT,OAIG;AAAA,6BAHDC,UAGC;AAAA,MAHDA,UAGC,gCAHY,KAGZ;AAAA,wBAFDC,KAEC;AAAA,MAFDA,KAEC,2BAFO,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,CAEP;AAAA,uBADDC,IACC;AAAA,MADDA,IACC,0BADM,GACN;;AAAA,kBAIGhB,QAAQ,EAJX;AAAA,MAECiB,EAFD,aAECA,EAFD;AAAA,MAGCC,KAHD,aAGCA,KAHD;;AAKD,MAAMT,SAAS,GAAGU,KAAK,CAACC,OAAN,CAAcL,KAAd,CAAlB;AACA,MAAMM,MAAM,GAAGZ,SAAS,GAAGN,iBAAH,GAAuBC,UAA/C,CANC,CAM0D;;AAE3D,MAAMkB,YAAY,GAAGrB,SAAS,CAACoB,MAAD,EAASZ,SAAS,GAAG,CAACM,KAAD,CAAH,GAAaA,KAA/B,EAAsC,UAAAM,MAAM;AAAA,WAAIA,MAAM,CAACE,OAAP,CAAeP,IAAf,CAAJ;AAAA,GAA5C,CAA9B;AACA,MAAMQ,GAAG,GAAGf,SAAS,GAAGa,YAAY,CAAC,CAAD,CAAf,GAAqBA,YAA1C,CATC,CASuD;AACxD;;AAEA,MAAMf,OAAO,GAAGF,QAAQ,CAAC;AAAA,WAAM,IAAIoB,OAAJ,CAAY,UAAAC,GAAG,EAAI;AAChD,UAAMlB,GAAG,GAAG,IAAIN,cAAJ,CAAmBe,EAAnB,CAAZ;AACA,UAAMV,OAAO,GAAGD,UAAU,CAACkB,GAAD,EAAMhB,GAAN,EAAWC,SAAX,CAA1B;AACAD,MAAAA,GAAG,CAACmB,OAAJ;AACAH,MAAAA,GAAG,CAACG,OAAJ;AACAD,MAAAA,GAAG,CAACnB,OAAD,CAAH;AACD,KAN8B,CAAN;AAAA,GAAD,EAMpB,CAACiB,GAAD,EAAMV,UAAN,CANoB,CAAxB;AAOAf,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAM6B,KAAK,GAAGV,KAAK,CAACJ,UAApB;AACA,QAAMe,MAAM,GAAGX,KAAK,CAACY,WAArB;AACA,QAAIhB,UAAJ,EAAgBI,KAAK,CAACJ,UAAN,GAAmBP,OAAnB;AAChBW,IAAAA,KAAK,CAACY,WAAN,GAAoBvB,OAApB;AACA,WAAO,YAAM;AACXW,MAAAA,KAAK,CAACY,WAAN,GAAoBD,MAApB;AACAX,MAAAA,KAAK,CAACJ,UAAN,GAAmBc,KAAnB;AACD,KAHD,CALoB,CAQjB;AACJ,GATc,EASZ,CAACrB,OAAD,CATY,CAAf;AAUA,SAAO,IAAP;AACD;;AAED,SAASM,WAAT","sourcesContent":["import { useLayoutEffect } from 'react';\nimport { useThree, useLoader } from 'react-three-fiber';\nimport { PMREMGenerator, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { useAsset } from 'use-asset';\n\nfunction getTexture(texture, gen, isCubeMap) {\n  if (isCubeMap) {\n    gen.compileEquirectangularShader();\n    return gen.fromCubemap(texture).texture;\n  }\n\n  return gen.fromEquirectangular(texture).texture;\n}\n\nfunction Environment({\n  background = false,\n  files = ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'],\n  path = '/'\n}) {\n  const {\n    gl,\n    scene\n  } = useThree();\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => loader.setPath(path));\n  const map = isCubeMap ? loaderResult[0] : loaderResult; // PMREMGenerator takes its sweet time to generate the env-map,\n  // Let's make this part of suspense, or else it just yields a frame-skip\n\n  const texture = useAsset(() => new Promise(res => {\n    const gen = new PMREMGenerator(gl);\n    const texture = getTexture(map, gen, isCubeMap);\n    gen.dispose();\n    map.dispose();\n    res(texture);\n  }), [map, background]);\n  useLayoutEffect(() => {\n    const oldbg = scene.background;\n    const oldenv = scene.environment;\n    if (background) scene.background = texture;\n    scene.environment = texture;\n    return () => {\n      scene.environment = oldenv;\n      scene.background = oldbg;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [texture]);\n  return null;\n}\n\nexport { Environment };\n"]},"metadata":{},"sourceType":"module"}